// Mocks generated by Mockito 5.4.4 from annotations
// in wallet/test/mocks/data.providers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:connectivity_plus/connectivity_plus.dart' as _i17;
import 'package:flutter_bloc/flutter_bloc.dart' as _i51;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i53;
import 'package:unleash_proxy_client_flutter/unleash_proxy_client_flutter.dart'
    as _i33;
import 'package:wallet/constants/coin_type.dart' as _i75;
import 'package:wallet/constants/env.dart' as _i35;
import 'package:wallet/constants/script_type.dart' as _i74;
import 'package:wallet/managers/preferences/preferences.manager.dart' as _i12;
import 'package:wallet/managers/providers/address.keys.provider.dart' as _i54;
import 'package:wallet/managers/providers/bdk.transaction.data.provider.dart'
    as _i15;
import 'package:wallet/managers/providers/blockinfo.data.provider.dart' as _i59;
import 'package:wallet/managers/providers/connectivity.provider.dart' as _i60;
import 'package:wallet/managers/providers/contacts.data.provider.dart' as _i61;
import 'package:wallet/managers/providers/data.provider.manager.dart' as _i2;
import 'package:wallet/managers/providers/exchange.data.provider.dart' as _i52;
import 'package:wallet/managers/providers/exclusive.invite.data.provider.dart'
    as _i64;
import 'package:wallet/managers/providers/gateway.data.provider.dart' as _i65;
import 'package:wallet/managers/providers/local.bitcoin.address.provider.dart'
    as _i25;
import 'package:wallet/managers/providers/models/wallet.key.dart' as _i76;
import 'package:wallet/managers/providers/models/wallet.mnemonic.dart' as _i73;
import 'package:wallet/managers/providers/models/wallet.passphrase.dart'
    as _i80;
import 'package:wallet/managers/providers/pool.address.data.provider.dart'
    as _i68;
import 'package:wallet/managers/providers/price.graph.data.provider.dart'
    as _i48;
import 'package:wallet/managers/providers/proton.address.provider.dart' as _i69;
import 'package:wallet/managers/providers/receive.address.data.provider.dart'
    as _i71;
import 'package:wallet/managers/providers/server.transaction.data.provider.dart'
    as _i32;
import 'package:wallet/managers/providers/unleash.data.provider.dart' as _i14;
import 'package:wallet/managers/providers/user.data.provider.dart' as _i36;
import 'package:wallet/managers/providers/user.settings.data.provider.dart'
    as _i13;
import 'package:wallet/managers/providers/wallet.data.provider.dart' as _i28;
import 'package:wallet/managers/providers/wallet.keys.provider.dart' as _i47;
import 'package:wallet/managers/providers/wallet.mnemonic.provider.dart'
    as _i77;
import 'package:wallet/managers/providers/wallet.name.provider.dart' as _i78;
import 'package:wallet/managers/providers/wallet.passphrase.provider.dart'
    as _i79;
import 'package:wallet/managers/secure.storage/secure.storage.manager.dart'
    as _i6;
import 'package:wallet/managers/users/user.manager.dart' as _i8;
import 'package:wallet/managers/wallet/wallet.manager.dart' as _i9;
import 'package:wallet/models/account.dao.impl.dart' as _i10;
import 'package:wallet/models/account.model.dart' as _i58;
import 'package:wallet/models/address.dao.impl.dart' as _i27;
import 'package:wallet/models/address.model.dart' as _i70;
import 'package:wallet/models/bitcoin.address.dao.impl.dart' as _i24;
import 'package:wallet/models/bitcoin.address.model.dart' as _i67;
import 'package:wallet/models/contacts.dao.impl.dart' as _i19;
import 'package:wallet/models/contacts.model.dart' as _i62;
import 'package:wallet/models/drift/db/app.database.dart' as _i40;
import 'package:wallet/models/drift/user.keys.queries.dart' as _i39;
import 'package:wallet/models/drift/users.queries.dart' as _i38;
import 'package:wallet/models/drift/wallet.user.settings.queries.dart' as _i42;
import 'package:wallet/models/exchangerate.dao.impl.dart' as _i30;
import 'package:wallet/models/transaction.dao.impl.dart' as _i31;
import 'package:wallet/models/transaction.model.dart' as _i72;
import 'package:wallet/models/wallet.dao.impl.dart' as _i23;
import 'package:wallet/models/wallet.keys.store.dart' as _i45;
import 'package:wallet/models/wallet.model.dart' as _i57;
import 'package:wallet/rust/api/api_service/bitcoin_address_client.dart'
    as _i26;
import 'package:wallet/rust/api/api_service/block_client.dart' as _i16;
import 'package:wallet/rust/api/api_service/exchange_rate_client.dart' as _i3;
import 'package:wallet/rust/api/api_service/invite_client.dart' as _i20;
import 'package:wallet/rust/api/api_service/onramp_gateway_client.dart' as _i21;
import 'package:wallet/rust/api/api_service/proton_contacts_client.dart'
    as _i18;
import 'package:wallet/rust/api/api_service/proton_email_addr_client.dart'
    as _i7;
import 'package:wallet/rust/api/api_service/proton_users_client.dart' as _i37;
import 'package:wallet/rust/api/api_service/settings_client.dart' as _i41;
import 'package:wallet/rust/api/api_service/unleash_client.dart' as _i34;
import 'package:wallet/rust/api/api_service/wallet_client.dart' as _i11;
import 'package:wallet/rust/api/bdk_wallet/account.dart' as _i66;
import 'package:wallet/rust/api/bdk_wallet/blockchain.dart' as _i56;
import 'package:wallet/rust/api/proton_wallet/crypto/wallet_key.dart' as _i46;
import 'package:wallet/rust/common/address_info.dart' as _i29;
import 'package:wallet/rust/proton_api/contacts.dart' as _i63;
import 'package:wallet/rust/proton_api/exchange_rate.dart' as _i5;
import 'package:wallet/rust/proton_api/payment_gateway.dart' as _i22;
import 'package:wallet/rust/proton_api/price_graph.dart' as _i49;
import 'package:wallet/rust/proton_api/proton_address.dart' as _i55;
import 'package:wallet/rust/proton_api/user_settings.dart' as _i50;
import 'package:wallet/rust/proton_api/wallet.dart' as _i43;
import 'package:wallet/rust/proton_api/wallet_account.dart' as _i44;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDataState_0 extends _i1.SmartFake implements _i2.DataState {
  _FakeDataState_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeExchangeRateClient_1 extends _i1.SmartFake
    implements _i3.ExchangeRateClient {
  _FakeExchangeRateClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamController_2<T> extends _i1.SmartFake
    implements _i4.StreamController<T> {
  _FakeStreamController_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProtonExchangeRate_3 extends _i1.SmartFake
    implements _i5.ProtonExchangeRate {
  _FakeProtonExchangeRate_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSecureStorageManager_4 extends _i1.SmartFake
    implements _i6.SecureStorageManager {
  _FakeSecureStorageManager_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProtonEmailAddressClient_5 extends _i1.SmartFake
    implements _i7.ProtonEmailAddressClient {
  _FakeProtonEmailAddressClient_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserManager_6 extends _i1.SmartFake implements _i8.UserManager {
  _FakeUserManager_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWalletManager_7 extends _i1.SmartFake implements _i9.WalletManager {
  _FakeWalletManager_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAccountDao_8 extends _i1.SmartFake implements _i10.AccountDao {
  _FakeAccountDao_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWalletClient_9 extends _i1.SmartFake implements _i11.WalletClient {
  _FakeWalletClient_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePreferencesManager_10 extends _i1.SmartFake
    implements _i12.PreferencesManager {
  _FakePreferencesManager_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserSettingsDataProvider_11 extends _i1.SmartFake
    implements _i13.UserSettingsDataProvider {
  _FakeUserSettingsDataProvider_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUnleashDataProvider_12 extends _i1.SmartFake
    implements _i14.UnleashDataProvider {
  _FakeUnleashDataProvider_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBDKTransactionData_13 extends _i1.SmartFake
    implements _i15.BDKTransactionData {
  _FakeBDKTransactionData_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBlockClient_14 extends _i1.SmartFake implements _i16.BlockClient {
  _FakeBlockClient_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConnectivity_15 extends _i1.SmartFake implements _i17.Connectivity {
  _FakeConnectivity_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeContactsClient_16 extends _i1.SmartFake
    implements _i18.ContactsClient {
  _FakeContactsClient_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeContactsDao_17 extends _i1.SmartFake implements _i19.ContactsDao {
  _FakeContactsDao_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInviteClient_18 extends _i1.SmartFake implements _i20.InviteClient {
  _FakeInviteClient_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOnRampGatewayClient_19 extends _i1.SmartFake
    implements _i21.OnRampGatewayClient {
  _FakeOnRampGatewayClient_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiCountry_20 extends _i1.SmartFake implements _i22.ApiCountry {
  _FakeApiCountry_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiSimpleFiatCurrency_21 extends _i1.SmartFake
    implements _i22.ApiSimpleFiatCurrency {
  _FakeApiSimpleFiatCurrency_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWalletDao_22 extends _i1.SmartFake implements _i23.WalletDao {
  _FakeWalletDao_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBitcoinAddressDao_23 extends _i1.SmartFake
    implements _i24.BitcoinAddressDao {
  _FakeBitcoinAddressDao_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocalBitcoinAddressData_24 extends _i1.SmartFake
    implements _i25.LocalBitcoinAddressData {
  _FakeLocalBitcoinAddressData_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBitcoinAddressClient_25 extends _i1.SmartFake
    implements _i26.BitcoinAddressClient {
  _FakeBitcoinAddressClient_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddressDao_26 extends _i1.SmartFake implements _i27.AddressDao {
  _FakeAddressDao_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWalletsDataProvider_27 extends _i1.SmartFake
    implements _i28.WalletsDataProvider {
  _FakeWalletsDataProvider_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFrbAddressInfo_28 extends _i1.SmartFake
    implements _i29.FrbAddressInfo {
  _FakeFrbAddressInfo_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeExchangeRateDao_29 extends _i1.SmartFake
    implements _i30.ExchangeRateDao {
  _FakeExchangeRateDao_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransactionDao_30 extends _i1.SmartFake
    implements _i31.TransactionDao {
  _FakeTransactionDao_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeServerTransactionData_31 extends _i1.SmartFake
    implements _i32.ServerTransactionData {
  _FakeServerTransactionData_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUnleashClient_32 extends _i1.SmartFake
    implements _i33.UnleashClient {
  _FakeUnleashClient_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFrbUnleashClient_33 extends _i1.SmartFake
    implements _i34.FrbUnleashClient {
  _FakeFrbUnleashClient_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiEnv_34 extends _i1.SmartFake implements _i35.ApiEnv {
  _FakeApiEnv_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProtonWalletUser_35 extends _i1.SmartFake
    implements _i36.ProtonWalletUser {
  _FakeProtonWalletUser_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProtonUsersClient_36 extends _i1.SmartFake
    implements _i37.ProtonUsersClient {
  _FakeProtonUsersClient_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserQueries_37 extends _i1.SmartFake implements _i38.UserQueries {
  _FakeUserQueries_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserKeysQueries_38 extends _i1.SmartFake
    implements _i39.UserKeysQueries {
  _FakeUserKeysQueries_38(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDriftProtonUser_39 extends _i1.SmartFake
    implements _i40.DriftProtonUser {
  _FakeDriftProtonUser_39(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSettingsClient_40 extends _i1.SmartFake
    implements _i41.SettingsClient {
  _FakeSettingsClient_40(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWalletUserSettingsQueries_41 extends _i1.SmartFake
    implements _i42.WalletUserSettingsQueries {
  _FakeWalletUserSettingsQueries_41(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiWalletData_42 extends _i1.SmartFake
    implements _i43.ApiWalletData {
  _FakeApiWalletData_42(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiWalletAccount_43 extends _i1.SmartFake
    implements _i44.ApiWalletAccount {
  _FakeApiWalletAccount_43(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWalletKeyStore_44 extends _i1.SmartFake
    implements _i45.WalletKeyStore {
  _FakeWalletKeyStore_44(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFrbUnlockedWalletKey_45 extends _i1.SmartFake
    implements _i46.FrbUnlockedWalletKey {
  _FakeFrbUnlockedWalletKey_45(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWalletKeysProvider_46 extends _i1.SmartFake
    implements _i47.WalletKeysProvider {
  _FakeWalletKeysProvider_46(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PriceGraphDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockPriceGraphDataProvider extends _i1.Mock
    implements _i48.PriceGraphDataProvider {
  MockPriceGraphDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<_i49.PriceGraph?> getPriceGraph({
    required _i50.FiatCurrency? fiatCurrency,
    required _i49.Timeframe? timeFrame,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPriceGraph,
          [],
          {
            #fiatCurrency: fiatCurrency,
            #timeFrame: timeFrame,
          },
        ),
        returnValue: _i4.Future<_i49.PriceGraph?>.value(),
      ) as _i4.Future<_i49.PriceGraph?>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ExchangeDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockExchangeDataProvider extends _i1.Mock
    implements _i52.ExchangeDataProvider {
  MockExchangeDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ExchangeRateClient get exchangeRateClient => (super.noSuchMethod(
        Invocation.getter(#exchangeRateClient),
        returnValue: _FakeExchangeRateClient_1(
          this,
          Invocation.getter(#exchangeRateClient),
        ),
      ) as _i3.ExchangeRateClient);

  @override
  Map<String, _i5.ProtonExchangeRate> get fiatCurrency2exchangeRate =>
      (super.noSuchMethod(
        Invocation.getter(#fiatCurrency2exchangeRate),
        returnValue: <String, _i5.ProtonExchangeRate>{},
      ) as Map<String, _i5.ProtonExchangeRate>);

  @override
  set fiatCurrency2exchangeRate(
          Map<String, _i5.ProtonExchangeRate>? _fiatCurrency2exchangeRate) =>
      super.noSuchMethod(
        Invocation.setter(
          #fiatCurrency2exchangeRate,
          _fiatCurrency2exchangeRate,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.StreamController<_i2.DataUpdated<dynamic>> get dataUpdateController =>
      (super.noSuchMethod(
        Invocation.getter(#dataUpdateController),
        returnValue: _FakeStreamController_2<_i2.DataUpdated<dynamic>>(
          this,
          Invocation.getter(#dataUpdateController),
        ),
      ) as _i4.StreamController<_i2.DataUpdated<dynamic>>);

  @override
  set dataUpdateController(
          _i4.StreamController<_i2.DataUpdated<dynamic>>?
              _dataUpdateController) =>
      super.noSuchMethod(
        Invocation.setter(
          #dataUpdateController,
          _dataUpdateController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<void> runOnce(
    _i50.FiatCurrency? fiatCurrency, {
    int? time,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runOnce,
          [fiatCurrency],
          {#time: time},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i5.ProtonExchangeRate> getExchangeRate(
    _i50.FiatCurrency? fiatCurrency, {
    int? time,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExchangeRate,
          [fiatCurrency],
          {#time: time},
        ),
        returnValue:
            _i4.Future<_i5.ProtonExchangeRate>.value(_FakeProtonExchangeRate_3(
          this,
          Invocation.method(
            #getExchangeRate,
            [fiatCurrency],
            {#time: time},
          ),
        )),
      ) as _i4.Future<_i5.ProtonExchangeRate>);

  @override
  _i5.ProtonExchangeRate? getExchangeRateOrNull(
          _i50.FiatCurrency? fiatCurrency) =>
      (super.noSuchMethod(Invocation.method(
        #getExchangeRateOrNull,
        [fiatCurrency],
      )) as _i5.ProtonExchangeRate?);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  String getKey(
    _i50.FiatCurrency? fiatCurrency, {
    int? time,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getKey,
          [fiatCurrency],
          {#time: time},
        ),
        returnValue: _i53.dummyValue<String>(
          this,
          Invocation.method(
            #getKey,
            [fiatCurrency],
            {#time: time},
          ),
        ),
      ) as String);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AddressKeyProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddressKeyProvider extends _i1.Mock
    implements _i54.AddressKeyProvider {
  MockAddressKeyProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.SecureStorageManager get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeSecureStorageManager_4(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i6.SecureStorageManager);

  @override
  String get key => (super.noSuchMethod(
        Invocation.getter(#key),
        returnValue: _i53.dummyValue<String>(
          this,
          Invocation.getter(#key),
        ),
      ) as String);

  @override
  _i4.StreamController<_i2.DataUpdated<dynamic>> get dataUpdateController =>
      (super.noSuchMethod(
        Invocation.getter(#dataUpdateController),
        returnValue: _FakeStreamController_2<_i2.DataUpdated<dynamic>>(
          this,
          Invocation.getter(#dataUpdateController),
        ),
      ) as _i4.StreamController<_i2.DataUpdated<dynamic>>);

  @override
  _i7.ProtonEmailAddressClient get protonEmailAddressClient =>
      (super.noSuchMethod(
        Invocation.getter(#protonEmailAddressClient),
        returnValue: _FakeProtonEmailAddressClient_5(
          this,
          Invocation.getter(#protonEmailAddressClient),
        ),
      ) as _i7.ProtonEmailAddressClient);

  @override
  _i8.UserManager get userManager => (super.noSuchMethod(
        Invocation.getter(#userManager),
        returnValue: _FakeUserManager_6(
          this,
          Invocation.getter(#userManager),
        ),
      ) as _i8.UserManager);

  @override
  List<_i55.ProtonAddress> get addresses => (super.noSuchMethod(
        Invocation.getter(#addresses),
        returnValue: <_i55.ProtonAddress>[],
      ) as List<_i55.ProtonAddress>);

  @override
  set addresses(List<_i55.ProtonAddress>? _addresses) => super.noSuchMethod(
        Invocation.setter(
          #addresses,
          _addresses,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<List<_i55.ProtonAddressKey>> getAddressKeysForTL() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAddressKeysForTL,
          [],
        ),
        returnValue: _i4.Future<List<_i55.ProtonAddressKey>>.value(
            <_i55.ProtonAddressKey>[]),
      ) as _i4.Future<List<_i55.ProtonAddressKey>>);

  @override
  _i4.Future<_i55.ProtonAddressKey?> getPrimaryAddressKey(String? addressID) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPrimaryAddressKey,
          [addressID],
        ),
        returnValue: _i4.Future<_i55.ProtonAddressKey?>.value(),
      ) as _i4.Future<_i55.ProtonAddressKey?>);

  @override
  _i4.Future<List<_i55.ProtonAddress>> getAddresses() => (super.noSuchMethod(
        Invocation.method(
          #getAddresses,
          [],
        ),
        returnValue:
            _i4.Future<List<_i55.ProtonAddress>>.value(<_i55.ProtonAddress>[]),
      ) as _i4.Future<List<_i55.ProtonAddress>>);

  @override
  _i4.Future<List<_i55.AllKeyAddressKey>> getAllPublicKeys(
    String? email, {
    required int? internalOnly,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllPublicKeys,
          [email],
          {#internalOnly: internalOnly},
        ),
        returnValue: _i4.Future<List<_i55.AllKeyAddressKey>>.value(
            <_i55.AllKeyAddressKey>[]),
      ) as _i4.Future<List<_i55.AllKeyAddressKey>>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [BDKTransactionDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockBDKTransactionDataProvider extends _i1.Mock
    implements _i15.BDKTransactionDataProvider {
  MockBDKTransactionDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.WalletManager get walletManager => (super.noSuchMethod(
        Invocation.getter(#walletManager),
        returnValue: _FakeWalletManager_7(
          this,
          Invocation.getter(#walletManager),
        ),
      ) as _i9.WalletManager);

  @override
  _i10.AccountDao get accountDao => (super.noSuchMethod(
        Invocation.getter(#accountDao),
        returnValue: _FakeAccountDao_8(
          this,
          Invocation.getter(#accountDao),
        ),
      ) as _i10.AccountDao);

  @override
  set blockchain(_i56.FrbBlockchainClient? _blockchain) => super.noSuchMethod(
        Invocation.setter(
          #blockchain,
          _blockchain,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.WalletClient get walletClient => (super.noSuchMethod(
        Invocation.getter(#walletClient),
        returnValue: _FakeWalletClient_9(
          this,
          Invocation.getter(#walletClient),
        ),
      ) as _i11.WalletClient);

  @override
  _i12.PreferencesManager get shared => (super.noSuchMethod(
        Invocation.getter(#shared),
        returnValue: _FakePreferencesManager_10(
          this,
          Invocation.getter(#shared),
        ),
      ) as _i12.PreferencesManager);

  @override
  _i13.UserSettingsDataProvider get userSettingsDataProvider =>
      (super.noSuchMethod(
        Invocation.getter(#userSettingsDataProvider),
        returnValue: _FakeUserSettingsDataProvider_11(
          this,
          Invocation.getter(#userSettingsDataProvider),
        ),
      ) as _i13.UserSettingsDataProvider);

  @override
  _i14.UnleashDataProvider get unleashDataProvider => (super.noSuchMethod(
        Invocation.getter(#unleashDataProvider),
        returnValue: _FakeUnleashDataProvider_12(
          this,
          Invocation.getter(#unleashDataProvider),
        ),
      ) as _i14.UnleashDataProvider);

  @override
  Map<String, bool> get isWalletSyncing => (super.noSuchMethod(
        Invocation.getter(#isWalletSyncing),
        returnValue: <String, bool>{},
      ) as Map<String, bool>);

  @override
  set isWalletSyncing(Map<String, bool>? _isWalletSyncing) =>
      super.noSuchMethod(
        Invocation.setter(
          #isWalletSyncing,
          _isWalletSyncing,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, int> get lastSyncedTime => (super.noSuchMethod(
        Invocation.getter(#lastSyncedTime),
        returnValue: <String, int>{},
      ) as Map<String, int>);

  @override
  set lastSyncedTime(Map<String, int>? _lastSyncedTime) => super.noSuchMethod(
        Invocation.setter(
          #lastSyncedTime,
          _lastSyncedTime,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<void> init(List<_i57.WalletModel>? wallets) => (super.noSuchMethod(
        Invocation.method(
          #init,
          [wallets],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i15.BDKTransactionData> getBDKTransactionDataByWalletAccount(
    _i57.WalletModel? walletModel,
    _i58.AccountModel? accountModel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBDKTransactionDataByWalletAccount,
          [
            walletModel,
            accountModel,
          ],
        ),
        returnValue: _i4.Future<_i15.BDKTransactionData>.value(
            _FakeBDKTransactionData_13(
          this,
          Invocation.method(
            #getBDKTransactionDataByWalletAccount,
            [
              walletModel,
              accountModel,
            ],
          ),
        )),
      ) as _i4.Future<_i15.BDKTransactionData>);

  @override
  bool lastSyncTimeCheck(
    _i57.WalletModel? walletModel,
    _i58.AccountModel? accountModel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #lastSyncTimeCheck,
          [
            walletModel,
            accountModel,
          ],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isSyncing(
    _i57.WalletModel? walletModel,
    _i58.AccountModel? accountModel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isSyncing,
          [
            walletModel,
            accountModel,
          ],
        ),
        returnValue: false,
      ) as bool);

  @override
  String getSyncCheckID(
    _i57.WalletModel? walletModel,
    _i58.AccountModel? accountModel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSyncCheckID,
          [
            walletModel,
            accountModel,
          ],
        ),
        returnValue: _i53.dummyValue<String>(
          this,
          Invocation.method(
            #getSyncCheckID,
            [
              walletModel,
              accountModel,
            ],
          ),
        ),
      ) as String);

  @override
  bool anyFullSyncedDone() => (super.noSuchMethod(
        Invocation.method(
          #anyFullSyncedDone,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<bool> hasFullSynced(
    _i57.WalletModel? walletModel,
    _i58.AccountModel? accountModel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #hasFullSynced,
          [
            walletModel,
            accountModel,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<bool> hasUsedServerStopgap(
    _i57.WalletModel? walletModel,
    _i58.AccountModel? accountModel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #hasUsedServerStopgap,
          [
            walletModel,
            accountModel,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> setUsedServerStopgap(
    _i57.WalletModel? walletModel,
    _i58.AccountModel? accountModel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUsedServerStopgap,
          [
            walletModel,
            accountModel,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> syncWallet(
    _i57.WalletModel? walletModel,
    _i58.AccountModel? accountModel, {
    required bool? forceSync,
    required bool? heightChanged,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #syncWallet,
          [
            walletModel,
            accountModel,
          ],
          {
            #forceSync: forceSync,
            #heightChanged: heightChanged,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void notifyCacheCleared() => super.noSuchMethod(
        Invocation.method(
          #notifyCacheCleared,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> updateErrorCount() => (super.noSuchMethod(
        Invocation.method(
          #updateErrorCount,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> resetErrorCount() => (super.noSuchMethod(
        Invocation.method(
          #resetErrorCount,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [BlockInfoDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockBlockInfoDataProvider extends _i1.Mock
    implements _i59.BlockInfoDataProvider {
  MockBlockInfoDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.BlockClient get blockClient => (super.noSuchMethod(
        Invocation.getter(#blockClient),
        returnValue: _FakeBlockClient_14(
          this,
          Invocation.getter(#blockClient),
        ),
      ) as _i16.BlockClient);

  @override
  int get blockHeight => (super.noSuchMethod(
        Invocation.getter(#blockHeight),
        returnValue: 0,
      ) as int);

  @override
  set blockHeight(int? _blockHeight) => super.noSuchMethod(
        Invocation.setter(
          #blockHeight,
          _blockHeight,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.StreamController<_i2.DataUpdated<dynamic>> get dataUpdateController =>
      (super.noSuchMethod(
        Invocation.getter(#dataUpdateController),
        returnValue: _FakeStreamController_2<_i2.DataUpdated<dynamic>>(
          this,
          Invocation.getter(#dataUpdateController),
        ),
      ) as _i4.StreamController<_i2.DataUpdated<dynamic>>);

  @override
  set dataUpdateController(
          _i4.StreamController<_i2.DataUpdated<dynamic>>?
              _dataUpdateController) =>
      super.noSuchMethod(
        Invocation.setter(
          #dataUpdateController,
          _dataUpdateController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<void> syncBlockHeight() => (super.noSuchMethod(
        Invocation.method(
          #syncBlockHeight,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> preLoad() => (super.noSuchMethod(
        Invocation.method(
          #preLoad,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ConnectivityProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivityProvider extends _i1.Mock
    implements _i60.ConnectivityProvider {
  MockConnectivityProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i17.Connectivity get connectivity => (super.noSuchMethod(
        Invocation.getter(#connectivity),
        returnValue: _FakeConnectivity_15(
          this,
          Invocation.getter(#connectivity),
        ),
      ) as _i17.Connectivity);

  @override
  List<_i17.ConnectivityResult> get connectivityResult => (super.noSuchMethod(
        Invocation.getter(#connectivityResult),
        returnValue: <_i17.ConnectivityResult>[],
      ) as List<_i17.ConnectivityResult>);

  @override
  set connectivityResult(List<_i17.ConnectivityResult>? _connectivityResult) =>
      super.noSuchMethod(
        Invocation.setter(
          #connectivityResult,
          _connectivityResult,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<void> initConnectivity() => (super.noSuchMethod(
        Invocation.method(
          #initConnectivity,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> hasConnectivity() => (super.noSuchMethod(
        Invocation.method(
          #hasConnectivity,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ContactsDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockContactsDataProvider extends _i1.Mock
    implements _i61.ContactsDataProvider {
  MockContactsDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.ContactsClient get contactClient => (super.noSuchMethod(
        Invocation.getter(#contactClient),
        returnValue: _FakeContactsClient_16(
          this,
          Invocation.getter(#contactClient),
        ),
      ) as _i18.ContactsClient);

  @override
  _i19.ContactsDao get contactsDao => (super.noSuchMethod(
        Invocation.getter(#contactsDao),
        returnValue: _FakeContactsDao_17(
          this,
          Invocation.getter(#contactsDao),
        ),
      ) as _i19.ContactsDao);

  @override
  String get userID => (super.noSuchMethod(
        Invocation.getter(#userID),
        returnValue: _i53.dummyValue<String>(
          this,
          Invocation.getter(#userID),
        ),
      ) as String);

  @override
  set contactsData(List<_i62.ContactsModel>? _contactsData) =>
      super.noSuchMethod(
        Invocation.setter(
          #contactsData,
          _contactsData,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.StreamController<_i2.DataUpdated<dynamic>> get dataUpdateController =>
      (super.noSuchMethod(
        Invocation.getter(#dataUpdateController),
        returnValue: _FakeStreamController_2<_i2.DataUpdated<dynamic>>(
          this,
          Invocation.getter(#dataUpdateController),
        ),
      ) as _i4.StreamController<_i2.DataUpdated<dynamic>>);

  @override
  set dataUpdateController(
          _i4.StreamController<_i2.DataUpdated<dynamic>>?
              _dataUpdateController) =>
      super.noSuchMethod(
        Invocation.setter(
          #dataUpdateController,
          _dataUpdateController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<void> fetchFromServer() => (super.noSuchMethod(
        Invocation.method(
          #fetchFromServer,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reloadCache() => (super.noSuchMethod(
        Invocation.method(
          #reloadCache,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i62.ContactsModel>?> getContacts() => (super.noSuchMethod(
        Invocation.method(
          #getContacts,
          [],
        ),
        returnValue: _i4.Future<List<_i62.ContactsModel>?>.value(),
      ) as _i4.Future<List<_i62.ContactsModel>?>);

  @override
  _i4.Future<String?> getContactName(String? email) => (super.noSuchMethod(
        Invocation.method(
          #getContactName,
          [email],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<void> insertUpdate(_i63.ApiContactEmails? contactEmail) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertUpdate,
          [contactEmail],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> delete(String? contactID) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [contactID],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> preLoad() => (super.noSuchMethod(
        Invocation.method(
          #preLoad,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ExclusiveInviteDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockExclusiveInviteDataProvider extends _i1.Mock
    implements _i64.ExclusiveInviteDataProvider {
  MockExclusiveInviteDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i20.InviteClient get inviteClient => (super.noSuchMethod(
        Invocation.getter(#inviteClient),
        returnValue: _FakeInviteClient_18(
          this,
          Invocation.getter(#inviteClient),
        ),
      ) as _i20.InviteClient);

  @override
  _i4.StreamController<_i2.DataUpdated<dynamic>> get dataUpdateController =>
      (super.noSuchMethod(
        Invocation.getter(#dataUpdateController),
        returnValue: _FakeStreamController_2<_i2.DataUpdated<dynamic>>(
          this,
          Invocation.getter(#dataUpdateController),
        ),
      ) as _i4.StreamController<_i2.DataUpdated<dynamic>>);

  @override
  set dataUpdateController(
          _i4.StreamController<_i2.DataUpdated<dynamic>>?
              _dataUpdateController) =>
      super.noSuchMethod(
        Invocation.setter(
          #dataUpdateController,
          _dataUpdateController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<void> updateData() => (super.noSuchMethod(
        Invocation.method(
          #updateData,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> preLoad() => (super.noSuchMethod(
        Invocation.method(
          #preLoad,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [GatewayDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockGatewayDataProvider extends _i1.Mock
    implements _i65.GatewayDataProvider {
  MockGatewayDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i21.OnRampGatewayClient get onRampGatewayClient => (super.noSuchMethod(
        Invocation.getter(#onRampGatewayClient),
        returnValue: _FakeOnRampGatewayClient_19(
          this,
          Invocation.getter(#onRampGatewayClient),
        ),
      ) as _i21.OnRampGatewayClient);

  @override
  Map<_i22.GatewayProvider, List<_i22.ApiCountry>> get countries =>
      (super.noSuchMethod(
        Invocation.getter(#countries),
        returnValue: <_i22.GatewayProvider, List<_i22.ApiCountry>>{},
      ) as Map<_i22.GatewayProvider, List<_i22.ApiCountry>>);

  @override
  set countries(Map<_i22.GatewayProvider, List<_i22.ApiCountry>>? _countries) =>
      super.noSuchMethod(
        Invocation.setter(
          #countries,
          _countries,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<_i22.GatewayProvider, List<_i22.ApiSimpleFiatCurrency>>
      get fiatCurrencies => (super.noSuchMethod(
            Invocation.getter(#fiatCurrencies),
            returnValue: <_i22.GatewayProvider,
                List<_i22.ApiSimpleFiatCurrency>>{},
          ) as Map<_i22.GatewayProvider, List<_i22.ApiSimpleFiatCurrency>>);

  @override
  set fiatCurrencies(
          Map<_i22.GatewayProvider, List<_i22.ApiSimpleFiatCurrency>>?
              _fiatCurrencies) =>
      super.noSuchMethod(
        Invocation.setter(
          #fiatCurrencies,
          _fiatCurrencies,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<_i22.GatewayProvider, List<_i22.PaymentMethod>> get paymentMethods =>
      (super.noSuchMethod(
        Invocation.getter(#paymentMethods),
        returnValue: <_i22.GatewayProvider, List<_i22.PaymentMethod>>{},
      ) as Map<_i22.GatewayProvider, List<_i22.PaymentMethod>>);

  @override
  set paymentMethods(
          Map<_i22.GatewayProvider, List<_i22.PaymentMethod>>?
              _paymentMethods) =>
      super.noSuchMethod(
        Invocation.setter(
          #paymentMethods,
          _paymentMethods,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i22.GatewayProvider> get supportedProviders => (super.noSuchMethod(
        Invocation.getter(#supportedProviders),
        returnValue: <_i22.GatewayProvider>[],
      ) as List<_i22.GatewayProvider>);

  @override
  set supportedProviders(List<_i22.GatewayProvider>? _supportedProviders) =>
      super.noSuchMethod(
        Invocation.setter(
          #supportedProviders,
          _supportedProviders,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<_i22.GatewayProvider, List<_i22.Quote>> get quoted => (super.noSuchMethod(
        Invocation.getter(#quoted),
        returnValue: <_i22.GatewayProvider, List<_i22.Quote>>{},
      ) as Map<_i22.GatewayProvider, List<_i22.Quote>>);

  @override
  set quoted(Map<_i22.GatewayProvider, List<_i22.Quote>>? _quoted) =>
      super.noSuchMethod(
        Invocation.setter(
          #quoted,
          _quoted,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<List<String>> getCountries() => (super.noSuchMethod(
        Invocation.method(
          #getCountries,
          [],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);

  @override
  _i22.ApiCountry getApiCountry(
    _i22.GatewayProvider? provider,
    String? localCode,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getApiCountry,
          [
            provider,
            localCode,
          ],
        ),
        returnValue: _FakeApiCountry_20(
          this,
          Invocation.method(
            #getApiCountry,
            [
              provider,
              localCode,
            ],
          ),
        ),
      ) as _i22.ApiCountry);

  @override
  _i4.Future<List<String>> getCurrencies(
    _i22.GatewayProvider? provider,
    String? localCode,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrencies,
          [
            provider,
            localCode,
          ],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);

  @override
  _i22.ApiSimpleFiatCurrency getApiCountryFiatCurrency(
    _i22.GatewayProvider? provider,
    String? fiatCurrency,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getApiCountryFiatCurrency,
          [
            provider,
            fiatCurrency,
          ],
        ),
        returnValue: _FakeApiSimpleFiatCurrency_21(
          this,
          Invocation.method(
            #getApiCountryFiatCurrency,
            [
              provider,
              fiatCurrency,
            ],
          ),
        ),
      ) as _i22.ApiSimpleFiatCurrency);

  @override
  _i4.Future<void> getPaymentMethods(_i50.FiatCurrency? fiatCurrency) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaymentMethods,
          [fiatCurrency],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<Map<_i22.GatewayProvider, List<_i22.Quote>>> getQuotes(
    String? fiatCurrency,
    String? amount,
    List<_i22.GatewayProvider>? providers,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getQuotes,
          [
            fiatCurrency,
            amount,
            providers,
          ],
        ),
        returnValue:
            _i4.Future<Map<_i22.GatewayProvider, List<_i22.Quote>>>.value(
                <_i22.GatewayProvider, List<_i22.Quote>>{}),
      ) as _i4.Future<Map<_i22.GatewayProvider, List<_i22.Quote>>>);

  @override
  _i4.Future<List<_i22.Quote>?> getCachedQuote(
    String? fiatCurrency,
    String? amount,
    _i22.GatewayProvider? provider,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedQuote,
          [
            fiatCurrency,
            amount,
            provider,
          ],
        ),
        returnValue: _i4.Future<List<_i22.Quote>?>.value(),
      ) as _i4.Future<List<_i22.Quote>?>);

  @override
  _i4.Future<String> checkout(
    String? amount,
    String? btcAddress,
    String? fiatCurrency,
    _i22.PaymentMethod? payMethod,
    _i22.GatewayProvider? provider,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkout,
          [
            amount,
            btcAddress,
            fiatCurrency,
            payMethod,
            provider,
          ],
        ),
        returnValue: _i4.Future<String>.value(_i53.dummyValue<String>(
          this,
          Invocation.method(
            #checkout,
            [
              amount,
              btcAddress,
              fiatCurrency,
              payMethod,
              provider,
            ],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LocalBitcoinAddressDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalBitcoinAddressDataProvider extends _i1.Mock
    implements _i25.LocalBitcoinAddressDataProvider {
  MockLocalBitcoinAddressDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i23.WalletDao get walletDao => (super.noSuchMethod(
        Invocation.getter(#walletDao),
        returnValue: _FakeWalletDao_22(
          this,
          Invocation.getter(#walletDao),
        ),
      ) as _i23.WalletDao);

  @override
  _i10.AccountDao get accountDao => (super.noSuchMethod(
        Invocation.getter(#accountDao),
        returnValue: _FakeAccountDao_8(
          this,
          Invocation.getter(#accountDao),
        ),
      ) as _i10.AccountDao);

  @override
  _i24.BitcoinAddressDao get bitcoinAddressDao => (super.noSuchMethod(
        Invocation.getter(#bitcoinAddressDao),
        returnValue: _FakeBitcoinAddressDao_23(
          this,
          Invocation.getter(#bitcoinAddressDao),
        ),
      ) as _i24.BitcoinAddressDao);

  @override
  String get userID => (super.noSuchMethod(
        Invocation.getter(#userID),
        returnValue: _i53.dummyValue<String>(
          this,
          Invocation.getter(#userID),
        ),
      ) as String);

  @override
  _i9.WalletManager get walletManager => (super.noSuchMethod(
        Invocation.getter(#walletManager),
        returnValue: _FakeWalletManager_7(
          this,
          Invocation.getter(#walletManager),
        ),
      ) as _i9.WalletManager);

  @override
  Map<String, _i25.AccountBitcoinAddressesInfo> get accountID2AddressesInfo =>
      (super.noSuchMethod(
        Invocation.getter(#accountID2AddressesInfo),
        returnValue: <String, _i25.AccountBitcoinAddressesInfo>{},
      ) as Map<String, _i25.AccountBitcoinAddressesInfo>);

  @override
  set accountID2AddressesInfo(
          Map<String, _i25.AccountBitcoinAddressesInfo>?
              _accountID2AddressesInfo) =>
      super.noSuchMethod(
        Invocation.setter(
          #accountID2AddressesInfo,
          _accountID2AddressesInfo,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<Map<String, _i29.FrbAddressInfo>> getBitcoinAddress(
    _i57.WalletModel? walletModel,
    _i58.AccountModel? accountModel,
    _i66.FrbAccount? account, {
    int? maxAddressIndex = 200,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBitcoinAddress,
          [
            walletModel,
            accountModel,
            account,
          ],
          {#maxAddressIndex: maxAddressIndex},
        ),
        returnValue: _i4.Future<Map<String, _i29.FrbAddressInfo>>.value(
            <String, _i29.FrbAddressInfo>{}),
      ) as _i4.Future<Map<String, _i29.FrbAddressInfo>>);

  @override
  _i4.Future<int> getLastUsedIndex(
    _i57.WalletModel? walletModel,
    _i58.AccountModel? accountModel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLastUsedIndex,
          [
            walletModel,
            accountModel,
          ],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<_i25.LocalBitcoinAddressData> getDataByWalletAccount(
    _i57.WalletModel? walletModel,
    _i58.AccountModel? accountModel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDataByWalletAccount,
          [
            walletModel,
            accountModel,
          ],
        ),
        returnValue: _i4.Future<_i25.LocalBitcoinAddressData>.value(
            _FakeLocalBitcoinAddressData_24(
          this,
          Invocation.method(
            #getDataByWalletAccount,
            [
              walletModel,
              accountModel,
            ],
          ),
        )),
      ) as _i4.Future<_i25.LocalBitcoinAddressData>);

  @override
  _i4.Future<void> insertOrUpdate(
          _i67.BitcoinAddressModel? bitcoinAddressModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertOrUpdate,
          [bitcoinAddressModel],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i67.BitcoinAddressModel?> findBitcoinAddressInAccount(
    String? bitcoinAddress,
    String? serverAccountID,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #findBitcoinAddressInAccount,
          [
            bitcoinAddress,
            serverAccountID,
          ],
        ),
        returnValue: _i4.Future<_i67.BitcoinAddressModel?>.value(),
      ) as _i4.Future<_i67.BitcoinAddressModel?>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PoolAddressDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockPoolAddressDataProvider extends _i1.Mock
    implements _i68.PoolAddressDataProvider {
  MockPoolAddressDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.BitcoinAddressClient get bitcoinAddressClient => (super.noSuchMethod(
        Invocation.getter(#bitcoinAddressClient),
        returnValue: _FakeBitcoinAddressClient_25(
          this,
          Invocation.getter(#bitcoinAddressClient),
        ),
      ) as _i26.BitcoinAddressClient);

  @override
  _i4.StreamController<_i2.DataUpdated<dynamic>> get dataUpdateController =>
      (super.noSuchMethod(
        Invocation.getter(#dataUpdateController),
        returnValue: _FakeStreamController_2<_i2.DataUpdated<dynamic>>(
          this,
          Invocation.getter(#dataUpdateController),
        ),
      ) as _i4.StreamController<_i2.DataUpdated<dynamic>>);

  @override
  set dataUpdateController(
          _i4.StreamController<_i2.DataUpdated<dynamic>>?
              _dataUpdateController) =>
      super.noSuchMethod(
        Invocation.setter(
          #dataUpdateController,
          _dataUpdateController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<List<_i43.ApiWalletBitcoinAddress>> getWalletBitcoinAddresses(
    String? walletID,
    String? accountID,
    int? onlyRequest,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWalletBitcoinAddresses,
          [
            walletID,
            accountID,
            onlyRequest,
          ],
        ),
        returnValue: _i4.Future<List<_i43.ApiWalletBitcoinAddress>>.value(
            <_i43.ApiWalletBitcoinAddress>[]),
      ) as _i4.Future<List<_i43.ApiWalletBitcoinAddress>>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ProtonAddressProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockProtonAddressProvider extends _i1.Mock
    implements _i69.ProtonAddressProvider {
  MockProtonAddressProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i27.AddressDao get addressDao => (super.noSuchMethod(
        Invocation.getter(#addressDao),
        returnValue: _FakeAddressDao_26(
          this,
          Invocation.getter(#addressDao),
        ),
      ) as _i27.AddressDao);

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<_i70.AddressModel?> getAddressModel(String? serverID) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAddressModel,
          [serverID],
        ),
        returnValue: _i4.Future<_i70.AddressModel?>.value(),
      ) as _i4.Future<_i70.AddressModel?>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ReceiveAddressDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockReceiveAddressDataProvider extends _i1.Mock
    implements _i71.ReceiveAddressDataProvider {
  MockReceiveAddressDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.BitcoinAddressClient get bitcoinAddressClient => (super.noSuchMethod(
        Invocation.getter(#bitcoinAddressClient),
        returnValue: _FakeBitcoinAddressClient_25(
          this,
          Invocation.getter(#bitcoinAddressClient),
        ),
      ) as _i26.BitcoinAddressClient);

  @override
  _i11.WalletClient get walletClient => (super.noSuchMethod(
        Invocation.getter(#walletClient),
        returnValue: _FakeWalletClient_9(
          this,
          Invocation.getter(#walletClient),
        ),
      ) as _i11.WalletClient);

  @override
  Map<String, _i29.FrbAddressInfo> get id2AddressInfo => (super.noSuchMethod(
        Invocation.getter(#id2AddressInfo),
        returnValue: <String, _i29.FrbAddressInfo>{},
      ) as Map<String, _i29.FrbAddressInfo>);

  @override
  _i28.WalletsDataProvider get walletDataProvider => (super.noSuchMethod(
        Invocation.getter(#walletDataProvider),
        returnValue: _FakeWalletsDataProvider_27(
          this,
          Invocation.getter(#walletDataProvider),
        ),
      ) as _i28.WalletsDataProvider);

  @override
  _i4.StreamController<_i2.DataUpdated<dynamic>> get dataUpdateController =>
      (super.noSuchMethod(
        Invocation.getter(#dataUpdateController),
        returnValue: _FakeStreamController_2<_i2.DataUpdated<dynamic>>(
          this,
          Invocation.getter(#dataUpdateController),
        ),
      ) as _i4.StreamController<_i2.DataUpdated<dynamic>>);

  @override
  set dataUpdateController(
          _i4.StreamController<_i2.DataUpdated<dynamic>>?
              _dataUpdateController) =>
      super.noSuchMethod(
        Invocation.setter(
          #dataUpdateController,
          _dataUpdateController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<void> handlePoolIndex(
    _i66.FrbAccount? account,
    _i58.AccountModel? accountModel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #handlePoolIndex,
          [
            account,
            accountModel,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> handleLastUsedIndex(
    _i66.FrbAccount? account,
    _i58.AccountModel? accountModel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleLastUsedIndex,
          [
            account,
            accountModel,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> initReceiveAddressForAccount(
    _i66.FrbAccount? account,
    _i58.AccountModel? accountModel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #initReceiveAddressForAccount,
          [
            account,
            accountModel,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i29.FrbAddressInfo> getReceiveAddress(
    _i66.FrbAccount? account,
    _i58.AccountModel? accountModel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReceiveAddress,
          [
            account,
            accountModel,
          ],
        ),
        returnValue:
            _i4.Future<_i29.FrbAddressInfo>.value(_FakeFrbAddressInfo_28(
          this,
          Invocation.method(
            #getReceiveAddress,
            [
              account,
              accountModel,
            ],
          ),
        )),
      ) as _i4.Future<_i29.FrbAddressInfo>);

  @override
  _i4.Future<_i29.FrbAddressInfo> generateNewReceiveAddress(
    _i66.FrbAccount? account,
    _i58.AccountModel? accountModel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateNewReceiveAddress,
          [
            account,
            accountModel,
          ],
        ),
        returnValue:
            _i4.Future<_i29.FrbAddressInfo>.value(_FakeFrbAddressInfo_28(
          this,
          Invocation.method(
            #generateNewReceiveAddress,
            [
              account,
              accountModel,
            ],
          ),
        )),
      ) as _i4.Future<_i29.FrbAddressInfo>);

  @override
  _i4.Future<void> updateLastUsedIndex(_i58.AccountModel? accountModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLastUsedIndex,
          [accountModel],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ServerTransactionDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockServerTransactionDataProvider extends _i1.Mock
    implements _i32.ServerTransactionDataProvider {
  MockServerTransactionDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.StreamController<_i2.DataUpdated<dynamic>> get dataUpdateController =>
      (super.noSuchMethod(
        Invocation.getter(#dataUpdateController),
        returnValue: _FakeStreamController_2<_i2.DataUpdated<dynamic>>(
          this,
          Invocation.getter(#dataUpdateController),
        ),
      ) as _i4.StreamController<_i2.DataUpdated<dynamic>>);

  @override
  set dataUpdateController(
          _i4.StreamController<_i2.DataUpdated<dynamic>>?
              _dataUpdateController) =>
      super.noSuchMethod(
        Invocation.setter(
          #dataUpdateController,
          _dataUpdateController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.WalletClient get walletClient => (super.noSuchMethod(
        Invocation.getter(#walletClient),
        returnValue: _FakeWalletClient_9(
          this,
          Invocation.getter(#walletClient),
        ),
      ) as _i11.WalletClient);

  @override
  _i23.WalletDao get walletDao => (super.noSuchMethod(
        Invocation.getter(#walletDao),
        returnValue: _FakeWalletDao_22(
          this,
          Invocation.getter(#walletDao),
        ),
      ) as _i23.WalletDao);

  @override
  _i10.AccountDao get accountDao => (super.noSuchMethod(
        Invocation.getter(#accountDao),
        returnValue: _FakeAccountDao_8(
          this,
          Invocation.getter(#accountDao),
        ),
      ) as _i10.AccountDao);

  @override
  _i30.ExchangeRateDao get exchangeRateDao => (super.noSuchMethod(
        Invocation.getter(#exchangeRateDao),
        returnValue: _FakeExchangeRateDao_29(
          this,
          Invocation.getter(#exchangeRateDao),
        ),
      ) as _i30.ExchangeRateDao);

  @override
  _i31.TransactionDao get transactionDao => (super.noSuchMethod(
        Invocation.getter(#transactionDao),
        returnValue: _FakeTransactionDao_30(
          this,
          Invocation.getter(#transactionDao),
        ),
      ) as _i31.TransactionDao);

  @override
  String get userID => (super.noSuchMethod(
        Invocation.getter(#userID),
        returnValue: _i53.dummyValue<String>(
          this,
          Invocation.getter(#userID),
        ),
      ) as String);

  @override
  List<_i32.ServerTransactionData> get serverTransactionDataList =>
      (super.noSuchMethod(
        Invocation.getter(#serverTransactionDataList),
        returnValue: <_i32.ServerTransactionData>[],
      ) as List<_i32.ServerTransactionData>);

  @override
  set serverTransactionDataList(
          List<_i32.ServerTransactionData>? _serverTransactionDataList) =>
      super.noSuchMethod(
        Invocation.setter(
          #serverTransactionDataList,
          _serverTransactionDataList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);

  @override
  set initialized(bool? _initialized) => super.noSuchMethod(
        Invocation.setter(
          #initialized,
          _initialized,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<_i32.ServerTransactionData>
      getServerTransactionDataByWalletAccount(
    _i57.WalletModel? walletModel,
    _i58.AccountModel? accountModel,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #getServerTransactionDataByWalletAccount,
              [
                walletModel,
                accountModel,
              ],
            ),
            returnValue: _i4.Future<_i32.ServerTransactionData>.value(
                _FakeServerTransactionData_31(
              this,
              Invocation.method(
                #getServerTransactionDataByWalletAccount,
                [
                  walletModel,
                  accountModel,
                ],
              ),
            )),
          ) as _i4.Future<_i32.ServerTransactionData>);

  @override
  _i4.Future<List<_i72.TransactionModel>> getTransByAccountID(
    String? walletID,
    String? accountID,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransByAccountID,
          [
            walletID,
            accountID,
          ],
        ),
        returnValue: _i4.Future<List<_i72.TransactionModel>>.value(
            <_i72.TransactionModel>[]),
      ) as _i4.Future<List<_i72.TransactionModel>>);

  @override
  _i4.Future<List<_i32.ServerTransactionData>> getServerTransactionData() =>
      (super.noSuchMethod(
        Invocation.method(
          #getServerTransactionData,
          [],
        ),
        returnValue: _i4.Future<List<_i32.ServerTransactionData>>.value(
            <_i32.ServerTransactionData>[]),
      ) as _i4.Future<List<_i32.ServerTransactionData>>);

  @override
  _i4.Future<void> fetchTransactions(
    String? walletID,
    String? accountID, {
    bool? isInitializeProcess = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchTransactions,
          [
            walletID,
            accountID,
          ],
          {#isInitializeProcess: isInitializeProcess},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> handleWalletTransaction(
    _i43.WalletTransaction? walletTransaction, {
    bool? notifyDataUpdate = false,
    bool? isInitializeProcess = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleWalletTransaction,
          [walletTransaction],
          {
            #notifyDataUpdate: notifyDataUpdate,
            #isInitializeProcess: isInitializeProcess,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> insertOrUpdate(
    _i72.TransactionModel? transactionModel, {
    bool? notifyDataUpdate = false,
    bool? isInitializeProcess = false,
    _i2.UpdateType? updateType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertOrUpdate,
          [transactionModel],
          {
            #notifyDataUpdate: notifyDataUpdate,
            #isInitializeProcess: isInitializeProcess,
            #updateType: updateType,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reloadAccountTransactions(
    String? walletID,
    String? accountID,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #reloadAccountTransactions,
          [
            walletID,
            accountID,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reset(String? walletId) => (super.noSuchMethod(
        Invocation.method(
          #reset,
          [walletId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UnleashDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockUnleashDataProvider extends _i1.Mock
    implements _i14.UnleashDataProvider {
  MockUnleashDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i33.UnleashClient get unleashClient => (super.noSuchMethod(
        Invocation.getter(#unleashClient),
        returnValue: _FakeUnleashClient_32(
          this,
          Invocation.getter(#unleashClient),
        ),
      ) as _i33.UnleashClient);

  @override
  set unleashClient(_i33.UnleashClient? _unleashClient) => super.noSuchMethod(
        Invocation.setter(
          #unleashClient,
          _unleashClient,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i34.FrbUnleashClient get frbUnleashClient => (super.noSuchMethod(
        Invocation.getter(#frbUnleashClient),
        returnValue: _FakeFrbUnleashClient_33(
          this,
          Invocation.getter(#frbUnleashClient),
        ),
      ) as _i34.FrbUnleashClient);

  @override
  _i35.ApiEnv get apiEnv => (super.noSuchMethod(
        Invocation.getter(#apiEnv),
        returnValue: _FakeApiEnv_34(
          this,
          Invocation.getter(#apiEnv),
        ),
      ) as _i35.ApiEnv);

  @override
  int get duration => (super.noSuchMethod(
        Invocation.getter(#duration),
        returnValue: 0,
      ) as int);

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<void> start() => (super.noSuchMethod(
        Invocation.method(
          #start,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  bool isFeatureEnabled(_i14.UnleashFeature? feature) => (super.noSuchMethod(
        Invocation.method(
          #isFeatureEnabled,
          [feature],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isTraceLoggerEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isTraceLoggerEnabled,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isUsingMempoolFees() => (super.noSuchMethod(
        Invocation.method(
          #isUsingMempoolFees,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isMobileClientDebugMode() => (super.noSuchMethod(
        Invocation.method(
          #isMobileClientDebugMode,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isWalletEarlyAccess() => (super.noSuchMethod(
        Invocation.method(
          #isWalletEarlyAccess,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isBuyMobileDisabled() => (super.noSuchMethod(
        Invocation.method(
          #isBuyMobileDisabled,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserDataProvider extends _i1.Mock implements _i36.UserDataProvider {
  MockUserDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i36.ProtonWalletUser get user => (super.noSuchMethod(
        Invocation.getter(#user),
        returnValue: _FakeProtonWalletUser_35(
          this,
          Invocation.getter(#user),
        ),
      ) as _i36.ProtonWalletUser);

  @override
  set user(_i36.ProtonWalletUser? _user) => super.noSuchMethod(
        Invocation.setter(
          #user,
          _user,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i37.ProtonUsersClient get protonUsersClient => (super.noSuchMethod(
        Invocation.getter(#protonUsersClient),
        returnValue: _FakeProtonUsersClient_36(
          this,
          Invocation.getter(#protonUsersClient),
        ),
      ) as _i37.ProtonUsersClient);

  @override
  _i38.UserQueries get userQueries => (super.noSuchMethod(
        Invocation.getter(#userQueries),
        returnValue: _FakeUserQueries_37(
          this,
          Invocation.getter(#userQueries),
        ),
      ) as _i38.UserQueries);

  @override
  _i39.UserKeysQueries get userKeysQueries => (super.noSuchMethod(
        Invocation.getter(#userKeysQueries),
        returnValue: _FakeUserKeysQueries_38(
          this,
          Invocation.getter(#userKeysQueries),
        ),
      ) as _i39.UserKeysQueries);

  @override
  _i4.StreamController<_i2.DataUpdated<dynamic>> get dataUpdateController =>
      (super.noSuchMethod(
        Invocation.getter(#dataUpdateController),
        returnValue: _FakeStreamController_2<_i2.DataUpdated<dynamic>>(
          this,
          Invocation.getter(#dataUpdateController),
        ),
      ) as _i4.StreamController<_i2.DataUpdated<dynamic>>);

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<void> preLoad() => (super.noSuchMethod(
        Invocation.method(
          #preLoad,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> syncProtonUser() => (super.noSuchMethod(
        Invocation.method(
          #syncProtonUser,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> syncProtonUserSettings() => (super.noSuchMethod(
        Invocation.method(
          #syncProtonUserSettings,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void enabled2FA(dynamic enable) => super.noSuchMethod(
        Invocation.method(
          #enabled2FA,
          [enable],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void enabledRecovery(dynamic enable) => super.noSuchMethod(
        Invocation.method(
          #enabledRecovery,
          [enable],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void enabledShowWalletRecovery(dynamic enable) => super.noSuchMethod(
        Invocation.method(
          #enabledShowWalletRecovery,
          [enable],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<List<_i40.DriftUserKey>> getUserKeys(String? userID) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserKeys,
          [userID],
        ),
        returnValue:
            _i4.Future<List<_i40.DriftUserKey>>.value(<_i40.DriftUserKey>[]),
      ) as _i4.Future<List<_i40.DriftUserKey>>);

  @override
  _i4.Future<_i40.DriftProtonUser> getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue:
            _i4.Future<_i40.DriftProtonUser>.value(_FakeDriftProtonUser_39(
          this,
          Invocation.method(
            #getUser,
            [],
          ),
        )),
      ) as _i4.Future<_i40.DriftProtonUser>);

  @override
  _i4.Future<void> fetchFromServer(String? userID) => (super.noSuchMethod(
        Invocation.method(
          #fetchFromServer,
          [userID],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserSettingsDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserSettingsDataProvider extends _i1.Mock
    implements _i13.UserSettingsDataProvider {
  MockUserSettingsDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get userID => (super.noSuchMethod(
        Invocation.getter(#userID),
        returnValue: _i53.dummyValue<String>(
          this,
          Invocation.getter(#userID),
        ),
      ) as String);

  @override
  _i41.SettingsClient get settingsClient => (super.noSuchMethod(
        Invocation.getter(#settingsClient),
        returnValue: _FakeSettingsClient_40(
          this,
          Invocation.getter(#settingsClient),
        ),
      ) as _i41.SettingsClient);

  @override
  _i12.PreferencesManager get shared => (super.noSuchMethod(
        Invocation.getter(#shared),
        returnValue: _FakePreferencesManager_10(
          this,
          Invocation.getter(#shared),
        ),
      ) as _i12.PreferencesManager);

  @override
  bool get initializedExchangeRate => (super.noSuchMethod(
        Invocation.getter(#initializedExchangeRate),
        returnValue: false,
      ) as bool);

  @override
  set initializedExchangeRate(bool? _initializedExchangeRate) =>
      super.noSuchMethod(
        Invocation.setter(
          #initializedExchangeRate,
          _initializedExchangeRate,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get displayBalance => (super.noSuchMethod(
        Invocation.getter(#displayBalance),
        returnValue: false,
      ) as bool);

  @override
  set displayBalance(bool? _displayBalance) => super.noSuchMethod(
        Invocation.setter(
          #displayBalance,
          _displayBalance,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i42.WalletUserSettingsQueries get settingsQueries => (super.noSuchMethod(
        Invocation.getter(#settingsQueries),
        returnValue: _FakeWalletUserSettingsQueries_41(
          this,
          Invocation.getter(#settingsQueries),
        ),
      ) as _i42.WalletUserSettingsQueries);

  @override
  int get customStopgap => (super.noSuchMethod(
        Invocation.getter(#customStopgap),
        returnValue: 0,
      ) as int);

  @override
  set customStopgap(int? _customStopgap) => super.noSuchMethod(
        Invocation.setter(
          #customStopgap,
          _customStopgap,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.ProtonExchangeRate get exchangeRate => (super.noSuchMethod(
        Invocation.getter(#exchangeRate),
        returnValue: _FakeProtonExchangeRate_3(
          this,
          Invocation.getter(#exchangeRate),
        ),
      ) as _i5.ProtonExchangeRate);

  @override
  set exchangeRate(_i5.ProtonExchangeRate? _exchangeRate) => super.noSuchMethod(
        Invocation.setter(
          #exchangeRate,
          _exchangeRate,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i50.BitcoinUnit get bitcoinUnit => (super.noSuchMethod(
        Invocation.getter(#bitcoinUnit),
        returnValue: _i50.BitcoinUnit.btc,
      ) as _i50.BitcoinUnit);

  @override
  set bitcoinUnit(_i50.BitcoinUnit? _bitcoinUnit) => super.noSuchMethod(
        Invocation.setter(
          #bitcoinUnit,
          _bitcoinUnit,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i50.FiatCurrency get fiatCurrency => (super.noSuchMethod(
        Invocation.getter(#fiatCurrency),
        returnValue: _i50.FiatCurrency.all,
      ) as _i50.FiatCurrency);

  @override
  set fiatCurrency(_i50.FiatCurrency? _fiatCurrency) => super.noSuchMethod(
        Invocation.setter(
          #fiatCurrency,
          _fiatCurrency,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set settingsData(_i40.WalletUserSettings? _settingsData) =>
      super.noSuchMethod(
        Invocation.setter(
          #settingsData,
          _settingsData,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.StreamController<_i13.UserSettingDataUpdated> get dataUpdateController =>
      (super.noSuchMethod(
        Invocation.getter(#dataUpdateController),
        returnValue: _FakeStreamController_2<_i13.UserSettingDataUpdated>(
          this,
          Invocation.getter(#dataUpdateController),
        ),
      ) as _i4.StreamController<_i13.UserSettingDataUpdated>);

  @override
  set dataUpdateController(
          _i4.StreamController<_i13.UserSettingDataUpdated>?
              _dataUpdateController) =>
      super.noSuchMethod(
        Invocation.setter(
          #dataUpdateController,
          _dataUpdateController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.StreamController<_i13.ExchangeRateDataUpdated>
      get exchangeRateUpdateController => (super.noSuchMethod(
            Invocation.getter(#exchangeRateUpdateController),
            returnValue: _FakeStreamController_2<_i13.ExchangeRateDataUpdated>(
              this,
              Invocation.getter(#exchangeRateUpdateController),
            ),
          ) as _i4.StreamController<_i13.ExchangeRateDataUpdated>);

  @override
  set exchangeRateUpdateController(
          _i4.StreamController<_i13.ExchangeRateDataUpdated>?
              _exchangeRateUpdateController) =>
      super.noSuchMethod(
        Invocation.setter(
          #exchangeRateUpdateController,
          _exchangeRateUpdateController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.StreamController<_i13.FiatCurrencyDataUpdated>
      get fiatCurrencyUpdateController => (super.noSuchMethod(
            Invocation.getter(#fiatCurrencyUpdateController),
            returnValue: _FakeStreamController_2<_i13.FiatCurrencyDataUpdated>(
              this,
              Invocation.getter(#fiatCurrencyUpdateController),
            ),
          ) as _i4.StreamController<_i13.FiatCurrencyDataUpdated>);

  @override
  set fiatCurrencyUpdateController(
          _i4.StreamController<_i13.FiatCurrencyDataUpdated>?
              _fiatCurrencyUpdateController) =>
      super.noSuchMethod(
        Invocation.setter(
          #fiatCurrencyUpdateController,
          _fiatCurrencyUpdateController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.StreamController<_i13.BitcoinUnitDataUpdated>
      get bitcoinUnitUpdateController => (super.noSuchMethod(
            Invocation.getter(#bitcoinUnitUpdateController),
            returnValue: _FakeStreamController_2<_i13.BitcoinUnitDataUpdated>(
              this,
              Invocation.getter(#bitcoinUnitUpdateController),
            ),
          ) as _i4.StreamController<_i13.BitcoinUnitDataUpdated>);

  @override
  set bitcoinUnitUpdateController(
          _i4.StreamController<_i13.BitcoinUnitDataUpdated>?
              _bitcoinUnitUpdateController) =>
      super.noSuchMethod(
        Invocation.setter(
          #bitcoinUnitUpdateController,
          _bitcoinUnitUpdateController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.StreamController<_i13.DisplayBalanceUpdated>
      get displayBalanceUpdateController => (super.noSuchMethod(
            Invocation.getter(#displayBalanceUpdateController),
            returnValue: _FakeStreamController_2<_i13.DisplayBalanceUpdated>(
              this,
              Invocation.getter(#displayBalanceUpdateController),
            ),
          ) as _i4.StreamController<_i13.DisplayBalanceUpdated>);

  @override
  set displayBalanceUpdateController(
          _i4.StreamController<_i13.DisplayBalanceUpdated>?
              _displayBalanceUpdateController) =>
      super.noSuchMethod(
        Invocation.setter(
          #displayBalanceUpdateController,
          _displayBalanceUpdateController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<void> loadFromServer() => (super.noSuchMethod(
        Invocation.method(
          #loadFromServer,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i40.WalletUserSettings?> getSettings() => (super.noSuchMethod(
        Invocation.method(
          #getSettings,
          [],
        ),
        returnValue: _i4.Future<_i40.WalletUserSettings?>.value(),
      ) as _i4.Future<_i40.WalletUserSettings?>);

  @override
  _i4.Future<void> setCustomStopgap(dynamic stopgap) => (super.noSuchMethod(
        Invocation.method(
          #setCustomStopgap,
          [stopgap],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> getCustomStopgap() => (super.noSuchMethod(
        Invocation.method(
          #getCustomStopgap,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> setDisplayBalance(dynamic display) => (super.noSuchMethod(
        Invocation.method(
          #setDisplayBalance,
          [display],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> getDisplayBalance() => (super.noSuchMethod(
        Invocation.method(
          #getDisplayBalance,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  void updateBitcoinUnit(_i50.BitcoinUnit? bitcoinUnit) => super.noSuchMethod(
        Invocation.method(
          #updateBitcoinUnit,
          [bitcoinUnit],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> acceptTermsAndConditions() => (super.noSuchMethod(
        Invocation.method(
          #acceptTermsAndConditions,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateFiatCurrency(
    _i50.FiatCurrency? fiatCurrency, {
    dynamic notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFiatCurrency,
          [fiatCurrency],
          {#notify: notify},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateReceiveEmailIntegrationNotification(
          dynamic isEnable) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateReceiveEmailIntegrationNotification,
          [isEnable],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateReceiveInviterNotification(dynamic isEnable) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateReceiveInviterNotification,
          [isEnable],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void updateExchangeRate(_i5.ProtonExchangeRate? exchangeRate) =>
      super.noSuchMethod(
        Invocation.method(
          #updateExchangeRate,
          [exchangeRate],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> insertUpdate(_i50.ApiWalletUserSettings? settings) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertUpdate,
          [settings],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  String getFiatCurrencyName({_i50.FiatCurrency? fiatCurrency}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFiatCurrencyName,
          [],
          {#fiatCurrency: fiatCurrency},
        ),
        returnValue: _i53.dummyValue<String>(
          this,
          Invocation.method(
            #getFiatCurrencyName,
            [],
            {#fiatCurrency: fiatCurrency},
          ),
        ),
      ) as String);

  @override
  String getFiatCurrencySign({_i50.FiatCurrency? fiatCurrency}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFiatCurrencySign,
          [],
          {#fiatCurrency: fiatCurrency},
        ),
        returnValue: _i53.dummyValue<String>(
          this,
          Invocation.method(
            #getFiatCurrencySign,
            [],
            {#fiatCurrency: fiatCurrency},
          ),
        ),
      ) as String);

  @override
  _i4.Future<void> preLoad() => (super.noSuchMethod(
        Invocation.method(
          #preLoad,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [WalletsDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletsDataProvider extends _i1.Mock
    implements _i28.WalletsDataProvider {
  MockWalletsDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.SecureStorageManager get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeSecureStorageManager_4(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i6.SecureStorageManager);

  @override
  String get key => (super.noSuchMethod(
        Invocation.getter(#key),
        returnValue: _i53.dummyValue<String>(
          this,
          Invocation.getter(#key),
        ),
      ) as String);

  @override
  _i4.StreamController<_i2.DataUpdated<dynamic>> get dataUpdateController =>
      (super.noSuchMethod(
        Invocation.getter(#dataUpdateController),
        returnValue: _FakeStreamController_2<_i2.DataUpdated<dynamic>>(
          this,
          Invocation.getter(#dataUpdateController),
        ),
      ) as _i4.StreamController<_i2.DataUpdated<dynamic>>);

  @override
  set dataUpdateController(
          _i4.StreamController<_i2.DataUpdated<dynamic>>?
              _dataUpdateController) =>
      super.noSuchMethod(
        Invocation.setter(
          #dataUpdateController,
          _dataUpdateController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.StreamController<_i2.SelectedWalletUpdated>
      get selectedWalletUpdateController => (super.noSuchMethod(
            Invocation.getter(#selectedWalletUpdateController),
            returnValue: _FakeStreamController_2<_i2.SelectedWalletUpdated>(
              this,
              Invocation.getter(#selectedWalletUpdateController),
            ),
          ) as _i4.StreamController<_i2.SelectedWalletUpdated>);

  @override
  set selectedWalletUpdateController(
          _i4.StreamController<_i2.SelectedWalletUpdated>?
              _selectedWalletUpdateController) =>
      super.noSuchMethod(
        Invocation.setter(
          #selectedWalletUpdateController,
          _selectedWalletUpdateController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.StreamController<_i2.NewBroadcastTransaction>
      get newBroadcastTransactionController => (super.noSuchMethod(
            Invocation.getter(#newBroadcastTransactionController),
            returnValue: _FakeStreamController_2<_i2.NewBroadcastTransaction>(
              this,
              Invocation.getter(#newBroadcastTransactionController),
            ),
          ) as _i4.StreamController<_i2.NewBroadcastTransaction>);

  @override
  set newBroadcastTransactionController(
          _i4.StreamController<_i2.NewBroadcastTransaction>?
              _newBroadcastTransactionController) =>
      super.noSuchMethod(
        Invocation.setter(
          #newBroadcastTransactionController,
          _newBroadcastTransactionController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.WalletClient get walletClient => (super.noSuchMethod(
        Invocation.getter(#walletClient),
        returnValue: _FakeWalletClient_9(
          this,
          Invocation.getter(#walletClient),
        ),
      ) as _i11.WalletClient);

  @override
  _i23.WalletDao get walletDao => (super.noSuchMethod(
        Invocation.getter(#walletDao),
        returnValue: _FakeWalletDao_22(
          this,
          Invocation.getter(#walletDao),
        ),
      ) as _i23.WalletDao);

  @override
  _i10.AccountDao get accountDao => (super.noSuchMethod(
        Invocation.getter(#accountDao),
        returnValue: _FakeAccountDao_8(
          this,
          Invocation.getter(#accountDao),
        ),
      ) as _i10.AccountDao);

  @override
  _i27.AddressDao get addressDao => (super.noSuchMethod(
        Invocation.getter(#addressDao),
        returnValue: _FakeAddressDao_26(
          this,
          Invocation.getter(#addressDao),
        ),
      ) as _i27.AddressDao);

  @override
  String get selectedServerWalletID => (super.noSuchMethod(
        Invocation.getter(#selectedServerWalletID),
        returnValue: _i53.dummyValue<String>(
          this,
          Invocation.getter(#selectedServerWalletID),
        ),
      ) as String);

  @override
  set selectedServerWalletID(String? _selectedServerWalletID) =>
      super.noSuchMethod(
        Invocation.setter(
          #selectedServerWalletID,
          _selectedServerWalletID,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get selectedServerWalletAccountID => (super.noSuchMethod(
        Invocation.getter(#selectedServerWalletAccountID),
        returnValue: _i53.dummyValue<String>(
          this,
          Invocation.getter(#selectedServerWalletAccountID),
        ),
      ) as String);

  @override
  set selectedServerWalletAccountID(String? _selectedServerWalletAccountID) =>
      super.noSuchMethod(
        Invocation.setter(
          #selectedServerWalletAccountID,
          _selectedServerWalletAccountID,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set walletsData(List<_i28.WalletData>? _walletsData) => super.noSuchMethod(
        Invocation.setter(
          #walletsData,
          _walletsData,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get userID => (super.noSuchMethod(
        Invocation.getter(#userID),
        returnValue: _i53.dummyValue<String>(
          this,
          Invocation.getter(#userID),
        ),
      ) as String);

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<_i73.WalletMnemonic?> getWalletMnemonic(String? walletID) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWalletMnemonic,
          [walletID],
        ),
        returnValue: _i4.Future<_i73.WalletMnemonic?>.value(),
      ) as _i4.Future<_i73.WalletMnemonic?>);

  @override
  _i4.Future<void> saveWalletMnemonics(List<_i73.WalletMnemonic>? values) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWalletMnemonics,
          [values],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i28.WalletData>?> getWallets() => (super.noSuchMethod(
        Invocation.method(
          #getWallets,
          [],
        ),
        returnValue: _i4.Future<List<_i28.WalletData>?>.value(),
      ) as _i4.Future<List<_i28.WalletData>?>);

  @override
  _i4.Future<_i28.WalletData?> getWallet(String? walletID) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWallet,
          [walletID],
        ),
        returnValue: _i4.Future<_i28.WalletData?>.value(),
      ) as _i4.Future<_i28.WalletData?>);

  @override
  _i4.Future<void> disableShowWalletRecovery(String? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #disableShowWalletRecovery,
          [walletId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i43.ApiWalletData> createWallet(_i43.CreateWalletReq? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #createWallet,
          [request],
        ),
        returnValue: _i4.Future<_i43.ApiWalletData>.value(_FakeApiWalletData_42(
          this,
          Invocation.method(
            #createWallet,
            [request],
          ),
        )),
      ) as _i4.Future<_i43.ApiWalletData>);

  @override
  _i4.Future<int> getNewDerivationAccountIndex(
    String? walletID,
    _i74.ScriptTypeInfo? scriptType,
    _i75.CoinType? coinType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNewDerivationAccountIndex,
          [
            walletID,
            scriptType,
            coinType,
          ],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<String> getNewDerivationPathBy(
    String? walletID,
    _i74.ScriptTypeInfo? scriptType,
    _i75.CoinType? coinType, {
    int? accountIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNewDerivationPathBy,
          [
            walletID,
            scriptType,
            coinType,
          ],
          {#accountIndex: accountIndex},
        ),
        returnValue: _i4.Future<String>.value(_i53.dummyValue<String>(
          this,
          Invocation.method(
            #getNewDerivationPathBy,
            [
              walletID,
              scriptType,
              coinType,
            ],
            {#accountIndex: accountIndex},
          ),
        )),
      ) as _i4.Future<String>);

  @override
  String formatDerivationPath(
    _i74.ScriptTypeInfo? scriptType,
    _i75.CoinType? coinType,
    int? accountIndex,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #formatDerivationPath,
          [
            scriptType,
            coinType,
            accountIndex,
          ],
        ),
        returnValue: _i53.dummyValue<String>(
          this,
          Invocation.method(
            #formatDerivationPath,
            [
              scriptType,
              coinType,
              accountIndex,
            ],
          ),
        ),
      ) as String);

  @override
  _i4.Future<_i44.ApiWalletAccount> createWalletAccount(
    String? walletID,
    _i44.CreateWalletAccountReq? request,
    _i50.FiatCurrency? fiatCurrency,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createWalletAccount,
          [
            walletID,
            request,
            fiatCurrency,
          ],
        ),
        returnValue:
            _i4.Future<_i44.ApiWalletAccount>.value(_FakeApiWalletAccount_43(
          this,
          Invocation.method(
            #createWalletAccount,
            [
              walletID,
              request,
              fiatCurrency,
            ],
          ),
        )),
      ) as _i4.Future<_i44.ApiWalletAccount>);

  @override
  _i4.Future<void> updateWallet({required _i57.WalletModel? wallet}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateWallet,
          [],
          {#wallet: wallet},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateWalletAccount(
          {required _i58.AccountModel? accountModel}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateWalletAccount,
          [],
          {#accountModel: accountModel},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteWalletByServerID(String? walletID) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteWalletByServerID,
          [walletID],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteWallet({required _i57.WalletModel? wallet}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteWallet,
          [],
          {#wallet: wallet},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteWalletAccount({
    required String? accountID,
    bool? addToStream = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteWalletAccount,
          [],
          {
            #accountID: accountID,
            #addToStream: addToStream,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void notifyUpdateEmailIntegration() => super.noSuchMethod(
        Invocation.method(
          #notifyUpdateEmailIntegration,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateSelected(
    String? serverWalletID,
    String? serverAccountID,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateSelected,
          [
            serverWalletID,
            serverAccountID,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> syncEmailAddresses(
    String? serverWalletID,
    String? serverAccountID,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #syncEmailAddresses,
          [
            serverWalletID,
            serverAccountID,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> removeEmailAddressOnWalletAccount(String? serverAccountID) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeEmailAddressOnWalletAccount,
          [serverAccountID],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> addEmailAddressToWalletAccount(
    String? serverWalletID,
    String? serverAccountID,
    _i44.ApiEmailAddress? address,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addEmailAddressToWalletAccount,
          [
            serverWalletID,
            serverAccountID,
            address,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateShowWalletRecovery({
    required String? walletID,
    required bool? showWalletRecovery,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShowWalletRecovery,
          [],
          {
            #walletID: walletID,
            #showWalletRecovery: showWalletRecovery,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> insertOrUpdateWallet({
    required String? userID,
    required String? name,
    required String? encryptedMnemonic,
    required int? passphrase,
    required int? imported,
    required int? priority,
    required int? status,
    required int? type,
    required String? walletID,
    required String? publickey,
    required String? fingerprint,
    required int? showWalletRecovery,
    required int? migrationRequired,
    required int? legacy,
    bool? initialize = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertOrUpdateWallet,
          [],
          {
            #userID: userID,
            #name: name,
            #encryptedMnemonic: encryptedMnemonic,
            #passphrase: passphrase,
            #imported: imported,
            #priority: priority,
            #status: status,
            #type: type,
            #walletID: walletID,
            #publickey: publickey,
            #fingerprint: fingerprint,
            #showWalletRecovery: showWalletRecovery,
            #migrationRequired: migrationRequired,
            #legacy: legacy,
            #initialize: initialize,
          },
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<int> insertOrUpdateAccount(
    String? walletID,
    String? labelEncrypted,
    int? scriptType,
    String? derivationPath,
    String? accountID,
    _i50.FiatCurrency? fiatCurrency,
    int? poolSize,
    int? priority,
    int? lastUsedIndex,
    int? stopGap, {
    bool? initialize = false,
    bool? notify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertOrUpdateAccount,
          [
            walletID,
            labelEncrypted,
            scriptType,
            derivationPath,
            accountID,
            fiatCurrency,
            poolSize,
            priority,
            lastUsedIndex,
            stopGap,
          ],
          {
            #initialize: initialize,
            #notify: notify,
          },
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> newBroadcastTransaction() => (super.noSuchMethod(
        Invocation.method(
          #newBroadcastTransaction,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i28.WalletData?> getFirstPriorityWallet() => (super.noSuchMethod(
        Invocation.method(
          #getFirstPriorityWallet,
          [],
        ),
        returnValue: _i4.Future<_i28.WalletData?>.value(),
      ) as _i4.Future<_i28.WalletData?>);

  @override
  _i4.Future<_i28.WalletData?> getWalletByServerWalletID(String? walletID) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWalletByServerWalletID,
          [walletID],
        ),
        returnValue: _i4.Future<_i28.WalletData?>.value(),
      ) as _i4.Future<_i28.WalletData?>);

  @override
  _i4.Future<void> updateWalletAccountFiatCurrency(
    String? walletID,
    String? accountID,
    _i50.FiatCurrency? newFiatCurrency,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateWalletAccountFiatCurrency,
          [
            walletID,
            accountID,
            newFiatCurrency,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reset() => (super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [WalletKeysProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletKeysProvider extends _i1.Mock
    implements _i47.WalletKeysProvider {
  MockWalletKeysProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.UserManager get userManager => (super.noSuchMethod(
        Invocation.getter(#userManager),
        returnValue: _FakeUserManager_6(
          this,
          Invocation.getter(#userManager),
        ),
      ) as _i8.UserManager);

  @override
  _i45.WalletKeyStore get walletKeyStore => (super.noSuchMethod(
        Invocation.getter(#walletKeyStore),
        returnValue: _FakeWalletKeyStore_44(
          this,
          Invocation.getter(#walletKeyStore),
        ),
      ) as _i45.WalletKeyStore);

  @override
  _i11.WalletClient get walletClient => (super.noSuchMethod(
        Invocation.getter(#walletClient),
        returnValue: _FakeWalletClient_9(
          this,
          Invocation.getter(#walletClient),
        ),
      ) as _i11.WalletClient);

  @override
  set walletKeys(List<_i76.WalletKey>? _walletKeys) => super.noSuchMethod(
        Invocation.setter(
          #walletKeys,
          _walletKeys,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<_i46.FrbUnlockedWalletKey> getWalletSecretKey(
          String? serverWalletID) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWalletSecretKey,
          [serverWalletID],
        ),
        returnValue: _i4.Future<_i46.FrbUnlockedWalletKey>.value(
            _FakeFrbUnlockedWalletKey_45(
          this,
          Invocation.method(
            #getWalletSecretKey,
            [serverWalletID],
          ),
        )),
      ) as _i4.Future<_i46.FrbUnlockedWalletKey>);

  @override
  _i4.Future<_i76.WalletKey?> getWalletKey(String? walletID) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWalletKey,
          [walletID],
        ),
        returnValue: _i4.Future<_i76.WalletKey?>.value(),
      ) as _i4.Future<_i76.WalletKey?>);

  @override
  _i4.Future<void> saveWalletKeys(List<_i76.WalletKey>? keys) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWalletKeys,
          [keys],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> saveApiWalletKeys(List<_i43.ApiWalletKey>? items) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveApiWalletKeys,
          [items],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reset() => (super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [WalletMnemonicProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletMnemonicProvider extends _i1.Mock
    implements _i77.WalletMnemonicProvider {
  MockWalletMnemonicProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i47.WalletKeysProvider get walletKeysProvider => (super.noSuchMethod(
        Invocation.getter(#walletKeysProvider),
        returnValue: _FakeWalletKeysProvider_46(
          this,
          Invocation.getter(#walletKeysProvider),
        ),
      ) as _i47.WalletKeysProvider);

  @override
  _i28.WalletsDataProvider get walletDataProvider => (super.noSuchMethod(
        Invocation.getter(#walletDataProvider),
        returnValue: _FakeWalletsDataProvider_27(
          this,
          Invocation.getter(#walletDataProvider),
        ),
      ) as _i28.WalletsDataProvider);

  @override
  _i8.UserManager get userManager => (super.noSuchMethod(
        Invocation.getter(#userManager),
        returnValue: _FakeUserManager_6(
          this,
          Invocation.getter(#userManager),
        ),
      ) as _i8.UserManager);

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<String> getMnemonicWithID(String? walletID) => (super.noSuchMethod(
        Invocation.method(
          #getMnemonicWithID,
          [walletID],
        ),
        returnValue: _i4.Future<String>.value(_i53.dummyValue<String>(
          this,
          Invocation.method(
            #getMnemonicWithID,
            [walletID],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [WalletNameProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletNameProvider extends _i1.Mock
    implements _i78.WalletNameProvider {
  MockWalletNameProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i47.WalletKeysProvider get walletKeysProvider => (super.noSuchMethod(
        Invocation.getter(#walletKeysProvider),
        returnValue: _FakeWalletKeysProvider_46(
          this,
          Invocation.getter(#walletKeysProvider),
        ),
      ) as _i47.WalletKeysProvider);

  @override
  _i10.AccountDao get accountDao => (super.noSuchMethod(
        Invocation.getter(#accountDao),
        returnValue: _FakeAccountDao_8(
          this,
          Invocation.getter(#accountDao),
        ),
      ) as _i10.AccountDao);

  @override
  _i23.WalletDao get walletDao => (super.noSuchMethod(
        Invocation.getter(#walletDao),
        returnValue: _FakeWalletDao_22(
          this,
          Invocation.getter(#walletDao),
        ),
      ) as _i23.WalletDao);

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<String> getAccountLabelWithID(String? accountID) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAccountLabelWithID,
          [accountID],
        ),
        returnValue: _i4.Future<String>.value(_i53.dummyValue<String>(
          this,
          Invocation.method(
            #getAccountLabelWithID,
            [accountID],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<String> getNameWithID(String? walletID) => (super.noSuchMethod(
        Invocation.method(
          #getNameWithID,
          [walletID],
        ),
        returnValue: _i4.Future<String>.value(_i53.dummyValue<String>(
          this,
          Invocation.method(
            #getNameWithID,
            [walletID],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [WalletPassphraseProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletPassphraseProvider extends _i1.Mock
    implements _i79.WalletPassphraseProvider {
  MockWalletPassphraseProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.SecureStorageManager get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeSecureStorageManager_4(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i6.SecureStorageManager);

  @override
  String get key => (super.noSuchMethod(
        Invocation.getter(#key),
        returnValue: _i53.dummyValue<String>(
          this,
          Invocation.getter(#key),
        ),
      ) as String);

  @override
  set walletPassphrases(List<_i80.WalletPassphrase>? _walletPassphrases) =>
      super.noSuchMethod(
        Invocation.setter(
          #walletPassphrases,
          _walletPassphrases,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.StreamController<_i2.DataUpdated<dynamic>> get dataUpdateController =>
      (super.noSuchMethod(
        Invocation.getter(#dataUpdateController),
        returnValue: _FakeStreamController_2<_i2.DataUpdated<dynamic>>(
          this,
          Invocation.getter(#dataUpdateController),
        ),
      ) as _i4.StreamController<_i2.DataUpdated<dynamic>>);

  @override
  set dataUpdateController(
          _i4.StreamController<_i2.DataUpdated<dynamic>>?
              _dataUpdateController) =>
      super.noSuchMethod(
        Invocation.setter(
          #dataUpdateController,
          _dataUpdateController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.DataState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDataState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.DataState);

  @override
  _i4.Stream<_i2.DataState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.DataState>.empty(),
      ) as _i4.Stream<_i2.DataState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<String?> getPassphrase(String? walletID) => (super.noSuchMethod(
        Invocation.method(
          #getPassphrase,
          [walletID],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<void> saveWalletPassphrase(
          _i80.WalletPassphrase? walletPassphrase) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWalletPassphrase,
          [walletPassphrase],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void emitState(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void add(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i2.DataEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i2.DataState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i2.DataEvent>(
    _i51.EventHandler<E, _i2.DataState>? handler, {
    _i51.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i51.Transition<_i2.DataEvent, _i2.DataState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void onChange(_i51.Change<_i2.DataState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
