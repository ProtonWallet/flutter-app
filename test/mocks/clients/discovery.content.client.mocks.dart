// Mocks generated by Mockito 5.4.4 from annotations
// in wallet/test/mocks/clients/discovery.content.client.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:wallet/rust/api/api_service/discovery_content_client.dart'
    as _i2;
import 'package:wallet/rust/proton_api/discovery_content.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [DiscoveryContentClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockDiscoveryContentClient extends _i1.Mock
    implements _i2.DiscoveryContentClient {
  MockDiscoveryContentClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isDisposed => (super.noSuchMethod(
        Invocation.getter(#isDisposed),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<List<_i4.Content>> getDiscoveryContents() => (super.noSuchMethod(
        Invocation.method(
          #getDiscoveryContents,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Content>>.value(<_i4.Content>[]),
      ) as _i3.Future<List<_i4.Content>>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
