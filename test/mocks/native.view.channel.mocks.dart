// Mocks generated by Mockito 5.4.4 from annotations
// in wallet/test/mocks/native.view.channel.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:wallet/constants/env.dart' as _i5;
import 'package:wallet/managers/channels/native.view.channel.dart' as _i2;
import 'package:wallet/managers/channels/platform.channel.state.dart' as _i4;
import 'package:wallet/models/native.session.model.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NativeViewChannel].
///
/// See the documentation for Mockito's code generation for more information.
class MockNativeViewChannel extends _i1.Mock implements _i2.NativeViewChannel {
  MockNativeViewChannel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i4.NativeLoginState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i3.Stream<_i4.NativeLoginState>.empty(),
      ) as _i3.Stream<_i4.NativeLoginState>);

  @override
  _i3.Future<void> switchToNativeSignup() => (super.noSuchMethod(
        Invocation.method(
          #switchToNativeSignup,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> switchToNativeLogin() => (super.noSuchMethod(
        Invocation.method(
          #switchToNativeLogin,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> restartNative() => (super.noSuchMethod(
        Invocation.method(
          #restartNative,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> initalNativeApiEnv(
    _i5.ApiEnv? env,
    String? appVersion,
    String? userAgent,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #initalNativeApiEnv,
          [
            env,
            appVersion,
            userAgent,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> switchToUpgrade(_i6.FlutterSession? session) =>
      (super.noSuchMethod(
        Invocation.method(
          #switchToUpgrade,
          [session],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> nativeLogout() => (super.noSuchMethod(
        Invocation.method(
          #nativeLogout,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> nativeReportBugs(
    String? username,
    String? email,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #nativeReportBugs,
          [
            username,
            email,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
