// Mocks generated by Mockito 5.4.4 from annotations
// in wallet/test/mocks/user.manager.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i14;

import 'package:flutter_bloc/flutter_bloc.dart' as _i18;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i13;
import 'package:wallet/constants/env.dart' as _i5;
import 'package:wallet/managers/api.service.manager.dart' as _i7;
import 'package:wallet/managers/manager.dart' as _i16;
import 'package:wallet/managers/preferences/preferences.manager.dart' as _i3;
import 'package:wallet/managers/providers/user.data.provider.dart' as _i8;
import 'package:wallet/managers/secure.storage/secure.storage.manager.dart'
    as _i2;
import 'package:wallet/managers/users/user.key.dart' as _i11;
import 'package:wallet/managers/users/user.manager.dart' as _i12;
import 'package:wallet/managers/users/user.manager.event.dart' as _i17;
import 'package:wallet/managers/users/user.manager.state.dart' as _i9;
import 'package:wallet/models/drift/db/app.database.dart' as _i4;
import 'package:wallet/models/native.session.model.dart' as _i6;
import 'package:wallet/rust/proton_api/auth_credential.dart' as _i15;
import 'package:wallet/rust/proton_api/proton_users.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSecureStorageManager_0 extends _i1.SmartFake
    implements _i2.SecureStorageManager {
  _FakeSecureStorageManager_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePreferencesManager_1 extends _i1.SmartFake
    implements _i3.PreferencesManager {
  _FakePreferencesManager_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppDatabase_2 extends _i1.SmartFake implements _i4.AppDatabase {
  _FakeAppDatabase_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiEnv_3 extends _i1.SmartFake implements _i5.ApiEnv {
  _FakeApiEnv_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserInfo_4 extends _i1.SmartFake implements _i6.UserInfo {
  _FakeUserInfo_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProtonApiServiceManager_5 extends _i1.SmartFake
    implements _i7.ProtonApiServiceManager {
  _FakeProtonApiServiceManager_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserDataProvider_6 extends _i1.SmartFake
    implements _i8.UserDataProvider {
  _FakeUserDataProvider_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserManagerState_7 extends _i1.SmartFake
    implements _i9.UserManagerState {
  _FakeUserManagerState_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFlutterSession_8 extends _i1.SmartFake
    implements _i6.FlutterSession {
  _FakeFlutterSession_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProtonUserKey_9 extends _i1.SmartFake implements _i10.ProtonUserKey {
  _FakeProtonUserKey_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserKey_10 extends _i1.SmartFake implements _i11.UserKey {
  _FakeUserKey_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserManager extends _i1.Mock implements _i12.UserManager {
  MockUserManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SecureStorageManager get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeSecureStorageManager_0(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i2.SecureStorageManager);

  @override
  _i3.PreferencesManager get shared => (super.noSuchMethod(
        Invocation.getter(#shared),
        returnValue: _FakePreferencesManager_1(
          this,
          Invocation.getter(#shared),
        ),
      ) as _i3.PreferencesManager);

  @override
  _i4.AppDatabase get dbConnection => (super.noSuchMethod(
        Invocation.getter(#dbConnection),
        returnValue: _FakeAppDatabase_2(
          this,
          Invocation.getter(#dbConnection),
        ),
      ) as _i4.AppDatabase);

  @override
  _i5.ApiEnv get apiEnv => (super.noSuchMethod(
        Invocation.getter(#apiEnv),
        returnValue: _FakeApiEnv_3(
          this,
          Invocation.getter(#apiEnv),
        ),
      ) as _i5.ApiEnv);

  @override
  _i6.UserInfo get userInfo => (super.noSuchMethod(
        Invocation.getter(#userInfo),
        returnValue: _FakeUserInfo_4(
          this,
          Invocation.getter(#userInfo),
        ),
      ) as _i6.UserInfo);

  @override
  set userInfo(_i6.UserInfo? _userInfo) => super.noSuchMethod(
        Invocation.setter(
          #userInfo,
          _userInfo,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.ProtonApiServiceManager get apiServiceManager => (super.noSuchMethod(
        Invocation.getter(#apiServiceManager),
        returnValue: _FakeProtonApiServiceManager_5(
          this,
          Invocation.getter(#apiServiceManager),
        ),
      ) as _i7.ProtonApiServiceManager);

  @override
  _i8.UserDataProvider get userDataProvider => (super.noSuchMethod(
        Invocation.getter(#userDataProvider),
        returnValue: _FakeUserDataProvider_6(
          this,
          Invocation.getter(#userDataProvider),
        ),
      ) as _i8.UserDataProvider);

  @override
  set userDataProvider(_i8.UserDataProvider? _userDataProvider) =>
      super.noSuchMethod(
        Invocation.setter(
          #userDataProvider,
          _userDataProvider,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get userID => (super.noSuchMethod(
        Invocation.getter(#userID),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#userID),
        ),
      ) as String);

  @override
  _i9.UserManagerState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeUserManagerState_7(
          this,
          Invocation.getter(#state),
        ),
      ) as _i9.UserManagerState);

  @override
  _i14.Stream<_i9.UserManagerState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i14.Stream<_i9.UserManagerState>.empty(),
      ) as _i14.Stream<_i9.UserManagerState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i14.Future<bool> sessionExists() => (super.noSuchMethod(
        Invocation.method(
          #sessionExists,
          [],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  _i14.Future<void> firstRun() => (super.noSuchMethod(
        Invocation.method(
          #firstRun,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<_i6.FlutterSession> getChildSession() => (super.noSuchMethod(
        Invocation.method(
          #getChildSession,
          [],
        ),
        returnValue:
            _i14.Future<_i6.FlutterSession>.value(_FakeFlutterSession_8(
          this,
          Invocation.method(
            #getChildSession,
            [],
          ),
        )),
      ) as _i14.Future<_i6.FlutterSession>);

  @override
  _i14.Future<void> flutterLogin(_i15.AuthCredential? auth) =>
      (super.noSuchMethod(
        Invocation.method(
          #flutterLogin,
          [auth],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<void> nativeLogin(_i6.UserInfo? userInfo) => (super.noSuchMethod(
        Invocation.method(
          #nativeLogin,
          [userInfo],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<void> tryRestoreUserInfo() => (super.noSuchMethod(
        Invocation.method(
          #tryRestoreUserInfo,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<void> trySaveUserInfo() => (super.noSuchMethod(
        Invocation.method(
          #trySaveUserInfo,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<_i10.ProtonUserKey> getDefaultKey() => (super.noSuchMethod(
        Invocation.method(
          #getDefaultKey,
          [],
        ),
        returnValue: _i14.Future<_i10.ProtonUserKey>.value(_FakeProtonUserKey_9(
          this,
          Invocation.method(
            #getDefaultKey,
            [],
          ),
        )),
      ) as _i14.Future<_i10.ProtonUserKey>);

  @override
  _i14.Future<_i10.ProtonUserKey> getPrimaryKeyForTL() => (super.noSuchMethod(
        Invocation.method(
          #getPrimaryKeyForTL,
          [],
        ),
        returnValue: _i14.Future<_i10.ProtonUserKey>.value(_FakeProtonUserKey_9(
          this,
          Invocation.method(
            #getPrimaryKeyForTL,
            [],
          ),
        )),
      ) as _i14.Future<_i10.ProtonUserKey>);

  @override
  _i14.Future<_i11.UserKey> getPrimaryKey() => (super.noSuchMethod(
        Invocation.method(
          #getPrimaryKey,
          [],
        ),
        returnValue: _i14.Future<_i11.UserKey>.value(_FakeUserKey_10(
          this,
          Invocation.method(
            #getPrimaryKey,
            [],
          ),
        )),
      ) as _i14.Future<_i11.UserKey>);

  @override
  _i14.Future<_i11.UserKey> getUserKey(String? keyID) => (super.noSuchMethod(
        Invocation.method(
          #getUserKey,
          [keyID],
        ),
        returnValue: _i14.Future<_i11.UserKey>.value(_FakeUserKey_10(
          this,
          Invocation.method(
            #getUserKey,
            [keyID],
          ),
        )),
      ) as _i14.Future<_i11.UserKey>);

  @override
  _i14.Future<List<_i10.ProtonUserKey>> getUserKeysForTL() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserKeysForTL,
          [],
        ),
        returnValue:
            _i14.Future<List<_i10.ProtonUserKey>>.value(<_i10.ProtonUserKey>[]),
      ) as _i14.Future<List<_i10.ProtonUserKey>>);

  @override
  _i14.Future<_i10.ProtonUserKey> getUserKeyForTL(String? keyID) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserKeyForTL,
          [keyID],
        ),
        returnValue: _i14.Future<_i10.ProtonUserKey>.value(_FakeProtonUserKey_9(
          this,
          Invocation.method(
            #getUserKeyForTL,
            [keyID],
          ),
        )),
      ) as _i14.Future<_i10.ProtonUserKey>);

  @override
  String getUserKeyPassphrase() => (super.noSuchMethod(
        Invocation.method(
          #getUserKeyPassphrase,
          [],
        ),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.method(
            #getUserKeyPassphrase,
            [],
          ),
        ),
      ) as String);

  @override
  _i14.Future<List<_i11.UserKey>> getUserKeys() => (super.noSuchMethod(
        Invocation.method(
          #getUserKeys,
          [],
        ),
        returnValue: _i14.Future<List<_i11.UserKey>>.value(<_i11.UserKey>[]),
      ) as _i14.Future<List<_i11.UserKey>>);

  @override
  _i14.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<void> login(String? userID) => (super.noSuchMethod(
        Invocation.method(
          #login,
          [userID],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i16.Priority getPriority() => (super.noSuchMethod(
        Invocation.method(
          #getPriority,
          [],
        ),
        returnValue: _i16.Priority.level1,
      ) as _i16.Priority);

  @override
  void add(_i17.UserManagerEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onEvent(_i17.UserManagerEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i9.UserManagerState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void on<E extends _i17.UserManagerEvent>(
    _i18.EventHandler<E, _i9.UserManagerState>? handler, {
    _i18.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTransition(
          _i18.Transition<_i17.UserManagerEvent, _i9.UserManagerState>?
              transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i14.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  void onChange(_i18.Change<_i9.UserManagerState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserInfo extends _i1.Mock implements _i6.UserInfo {
  MockUserInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get userId => (super.noSuchMethod(
        Invocation.getter(#userId),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#userId),
        ),
      ) as String);

  @override
  String get userMail => (super.noSuchMethod(
        Invocation.getter(#userMail),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#userMail),
        ),
      ) as String);

  @override
  String get userName => (super.noSuchMethod(
        Invocation.getter(#userName),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#userName),
        ),
      ) as String);

  @override
  String get userDisplayName => (super.noSuchMethod(
        Invocation.getter(#userDisplayName),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#userDisplayName),
        ),
      ) as String);

  @override
  String get sessionId => (super.noSuchMethod(
        Invocation.getter(#sessionId),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#sessionId),
        ),
      ) as String);

  @override
  String get accessToken => (super.noSuchMethod(
        Invocation.getter(#accessToken),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#accessToken),
        ),
      ) as String);

  @override
  String get refreshToken => (super.noSuchMethod(
        Invocation.getter(#refreshToken),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#refreshToken),
        ),
      ) as String);

  @override
  String get scopes => (super.noSuchMethod(
        Invocation.getter(#scopes),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#scopes),
        ),
      ) as String);

  @override
  String get userKeyID => (super.noSuchMethod(
        Invocation.getter(#userKeyID),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#userKeyID),
        ),
      ) as String);

  @override
  String get userPrivateKey => (super.noSuchMethod(
        Invocation.getter(#userPrivateKey),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#userPrivateKey),
        ),
      ) as String);

  @override
  String get userPassphrase => (super.noSuchMethod(
        Invocation.getter(#userPassphrase),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#userPassphrase),
        ),
      ) as String);

  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
