// Mocks generated by Mockito 5.4.4 from annotations
// in wallet/test/snapshot/scenes/paper_wallet_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i14;
import 'dart:ui' as _i17;

import 'package:flutter/cupertino.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i13;
import 'package:wallet/managers/manager.factory.dart' as _i10;
import 'package:wallet/models/account.model.dart' as _i3;
import 'package:wallet/models/wallet.model.dart' as _i2;
import 'package:wallet/rust/api/bdk_wallet/psbt.dart' as _i12;
import 'package:wallet/rust/proton_api/exchange_rate.dart' as _i6;
import 'package:wallet/rust/proton_api/user_settings.dart' as _i15;
import 'package:wallet/scenes/core/coordinator.dart' as _i8;
import 'package:wallet/scenes/core/view.dart' as _i9;
import 'package:wallet/scenes/core/view.navigatior.identifiers.dart' as _i16;
import 'package:wallet/scenes/core/viewmodel.dart' as _i7;
import 'package:wallet/scenes/paper.wallet/paper.wallet.coordinator.dart'
    as _i5;
import 'package:wallet/scenes/paper.wallet/paper.wallet.viewmodel.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWalletModel_0 extends _i1.SmartFake implements _i2.WalletModel {
  _FakeWalletModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAccountModel_1 extends _i1.SmartFake implements _i3.AccountModel {
  _FakeAccountModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_2 extends _i1.SmartFake
    implements _i4.TextEditingController {
  _FakeTextEditingController_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFocusNode_3 extends _i1.SmartFake implements _i4.FocusNode {
  _FakeFocusNode_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakePaperWalletCoordinator_4 extends _i1.SmartFake
    implements _i5.PaperWalletCoordinator {
  _FakePaperWalletCoordinator_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProtonExchangeRate_5 extends _i1.SmartFake
    implements _i6.ProtonExchangeRate {
  _FakeProtonExchangeRate_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeViewBase_6<V extends _i7.ViewModel<_i8.Coordinator>>
    extends _i1.SmartFake implements _i9.ViewBase<V> {
  _FakeViewBase_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeGlobalKey_7<T extends _i4.State<_i4.StatefulWidget>>
    extends _i1.SmartFake implements _i4.GlobalKey<T> {
  _FakeGlobalKey_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeManagerFactory_8 extends _i1.SmartFake
    implements _i10.ManagerFactory {
  _FakeManagerFactory_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PaperWalletViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaperWalletViewModel extends _i1.Mock
    implements _i11.PaperWalletViewModel {
  MockPaperWalletViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.WalletModel get walletModel => (super.noSuchMethod(
        Invocation.getter(#walletModel),
        returnValue: _FakeWalletModel_0(
          this,
          Invocation.getter(#walletModel),
        ),
      ) as _i2.WalletModel);

  @override
  _i3.AccountModel get accountModel => (super.noSuchMethod(
        Invocation.getter(#accountModel),
        returnValue: _FakeAccountModel_1(
          this,
          Invocation.getter(#accountModel),
        ),
      ) as _i3.AccountModel);

  @override
  int get receiveAddressIndex => (super.noSuchMethod(
        Invocation.getter(#receiveAddressIndex),
        returnValue: 0,
      ) as int);

  @override
  set draftPsbt(_i12.FrbPsbt? _draftPsbt) => super.noSuchMethod(
        Invocation.setter(
          #draftPsbt,
          _draftPsbt,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.PageStatus get pageStatus => (super.noSuchMethod(
        Invocation.getter(#pageStatus),
        returnValue: _i11.PageStatus.importPaperWallet,
      ) as _i11.PageStatus);

  @override
  set pageStatus(_i11.PageStatus? _pageStatus) => super.noSuchMethod(
        Invocation.setter(
          #pageStatus,
          _pageStatus,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get importedError => (super.noSuchMethod(
        Invocation.getter(#importedError),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#importedError),
        ),
      ) as String);

  @override
  set importedError(String? _importedError) => super.noSuchMethod(
        Invocation.setter(
          #importedError,
          _importedError,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get walletName => (super.noSuchMethod(
        Invocation.getter(#walletName),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#walletName),
        ),
      ) as String);

  @override
  set walletName(String? _walletName) => super.noSuchMethod(
        Invocation.setter(
          #walletName,
          _walletName,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get accountName => (super.noSuchMethod(
        Invocation.getter(#accountName),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.getter(#accountName),
        ),
      ) as String);

  @override
  set accountName(String? _accountName) => super.noSuchMethod(
        Invocation.setter(
          #accountName,
          _accountName,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.TextEditingController get privateKeyController => (super.noSuchMethod(
        Invocation.getter(#privateKeyController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#privateKeyController),
        ),
      ) as _i4.TextEditingController);

  @override
  set privateKeyController(_i4.TextEditingController? _privateKeyController) =>
      super.noSuchMethod(
        Invocation.setter(
          #privateKeyController,
          _privateKeyController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.FocusNode get privateKeyFocusNode => (super.noSuchMethod(
        Invocation.getter(#privateKeyFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#privateKeyFocusNode),
        ),
      ) as _i4.FocusNode);

  @override
  set privateKeyFocusNode(_i4.FocusNode? _privateKeyFocusNode) =>
      super.noSuchMethod(
        Invocation.setter(
          #privateKeyFocusNode,
          _privateKeyFocusNode,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.PaperWalletCoordinator get coordinator => (super.noSuchMethod(
        Invocation.getter(#coordinator),
        returnValue: _FakePaperWalletCoordinator_4(
          this,
          Invocation.getter(#coordinator),
        ),
      ) as _i5.PaperWalletCoordinator);

  @override
  set currentSize(_i9.ViewSize? _currentSize) => super.noSuchMethod(
        Invocation.setter(
          #currentSize,
          _currentSize,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i14.Stream<_i7.ViewModel<_i8.Coordinator>> get datasourceChanged =>
      (super.noSuchMethod(
        Invocation.getter(#datasourceChanged),
        returnValue: _i14.Stream<_i7.ViewModel<_i8.Coordinator>>.empty(),
      ) as _i14.Stream<_i7.ViewModel<_i8.Coordinator>>);

  @override
  bool get isMobileSize => (super.noSuchMethod(
        Invocation.getter(#isMobileSize),
        returnValue: false,
      ) as bool);

  @override
  bool get keepAlive => (super.noSuchMethod(
        Invocation.getter(#keepAlive),
        returnValue: false,
      ) as bool);

  @override
  bool get mobile => (super.noSuchMethod(
        Invocation.getter(#mobile),
        returnValue: false,
      ) as bool);

  @override
  bool get desktop => (super.noSuchMethod(
        Invocation.getter(#desktop),
        returnValue: false,
      ) as bool);

  @override
  bool get android => (super.noSuchMethod(
        Invocation.getter(#android),
        returnValue: false,
      ) as bool);

  @override
  bool get iOS => (super.noSuchMethod(
        Invocation.getter(#iOS),
        returnValue: false,
      ) as bool);

  @override
  bool get macOS => (super.noSuchMethod(
        Invocation.getter(#macOS),
        returnValue: false,
      ) as bool);

  @override
  bool get apple => (super.noSuchMethod(
        Invocation.getter(#apple),
        returnValue: false,
      ) as bool);

  @override
  bool get screenSizeState => (super.noSuchMethod(
        Invocation.getter(#screenSizeState),
        returnValue: false,
      ) as bool);

  @override
  void updatePageStatus(dynamic status) => super.noSuchMethod(
        Invocation.method(
          #updatePageStatus,
          [status],
        ),
        returnValueForMissingStub: null,
      );

  @override
  int getDisplayDigits() => (super.noSuchMethod(
        Invocation.method(
          #getDisplayDigits,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  String getFiatCurrencyName() => (super.noSuchMethod(
        Invocation.method(
          #getFiatCurrencyName,
          [],
        ),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.method(
            #getFiatCurrencyName,
            [],
          ),
        ),
      ) as String);

  @override
  String getFiatCurrencySign() => (super.noSuchMethod(
        Invocation.method(
          #getFiatCurrencySign,
          [],
        ),
        returnValue: _i13.dummyValue<String>(
          this,
          Invocation.method(
            #getFiatCurrencySign,
            [],
          ),
        ),
      ) as String);

  @override
  _i6.ProtonExchangeRate getExchangeRate() => (super.noSuchMethod(
        Invocation.method(
          #getExchangeRate,
          [],
        ),
        returnValue: _FakeProtonExchangeRate_5(
          this,
          Invocation.method(
            #getExchangeRate,
            [],
          ),
        ),
      ) as _i6.ProtonExchangeRate);

  @override
  _i15.BitcoinUnit getBitcoinUnit() => (super.noSuchMethod(
        Invocation.method(
          #getBitcoinUnit,
          [],
        ),
        returnValue: _i15.BitcoinUnit.btc,
      ) as _i15.BitcoinUnit);

  @override
  int getTransactionAmount() => (super.noSuchMethod(
        Invocation.method(
          #getTransactionAmount,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  int getTransactionFee() => (super.noSuchMethod(
        Invocation.method(
          #getTransactionFee,
          [],
        ),
        returnValue: 0,
      ) as int);

  @override
  void clearImportedError() => super.noSuchMethod(
        Invocation.method(
          #clearImportedError,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i14.Future<void> tryImportWithPrivateKey() => (super.noSuchMethod(
        Invocation.method(
          #tryImportWithPrivateKey,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  _i14.Future<bool> broadcast() => (super.noSuchMethod(
        Invocation.method(
          #broadcast,
          [],
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  void sinkAddSafe() => super.noSuchMethod(
        Invocation.method(
          #sinkAddSafe,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i14.Future<void> loadData() => (super.noSuchMethod(
        Invocation.method(
          #loadData,
          [],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i14.Future<void> move(_i16.NavID? to) => (super.noSuchMethod(
        Invocation.method(
          #move,
          [to],
        ),
        returnValue: _i14.Future<void>.value(),
        returnValueForMissingStub: _i14.Future<void>.value(),
      ) as _i14.Future<void>);
}

/// A class which mocks [PaperWalletCoordinator].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaperWalletCoordinator extends _i1.Mock
    implements _i5.PaperWalletCoordinator {
  MockPaperWalletCoordinator() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.ViewBase<_i7.ViewModel<_i8.Coordinator>> get widget =>
      (super.noSuchMethod(
        Invocation.getter(#widget),
        returnValue: _FakeViewBase_6<_i7.ViewModel<_i8.Coordinator>>(
          this,
          Invocation.getter(#widget),
        ),
      ) as _i9.ViewBase<_i7.ViewModel<_i8.Coordinator>>);

  @override
  set widget(_i9.ViewBase<_i7.ViewModel<_i8.Coordinator>>? _widget) =>
      super.noSuchMethod(
        Invocation.setter(
          #widget,
          _widget,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.WalletModel get walletModel => (super.noSuchMethod(
        Invocation.getter(#walletModel),
        returnValue: _FakeWalletModel_0(
          this,
          Invocation.getter(#walletModel),
        ),
      ) as _i2.WalletModel);

  @override
  _i3.AccountModel get accountModel => (super.noSuchMethod(
        Invocation.getter(#accountModel),
        returnValue: _FakeAccountModel_1(
          this,
          Invocation.getter(#accountModel),
        ),
      ) as _i3.AccountModel);

  @override
  int get receiveAddressIndex => (super.noSuchMethod(
        Invocation.getter(#receiveAddressIndex),
        returnValue: 0,
      ) as int);

  @override
  _i4.GlobalKey<_i4.NavigatorState> get navigatorKey => (super.noSuchMethod(
        Invocation.getter(#navigatorKey),
        returnValue: _FakeGlobalKey_7<_i4.NavigatorState>(
          this,
          Invocation.getter(#navigatorKey),
        ),
      ) as _i4.GlobalKey<_i4.NavigatorState>);

  @override
  _i10.ManagerFactory get serviceManager => (super.noSuchMethod(
        Invocation.getter(#serviceManager),
        returnValue: _FakeManagerFactory_8(
          this,
          Invocation.getter(#serviceManager),
        ),
      ) as _i10.ManagerFactory);

  @override
  void end() => super.noSuchMethod(
        Invocation.method(
          #end,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.ViewBase<_i7.ViewModel<_i8.Coordinator>> start() => (super.noSuchMethod(
        Invocation.method(
          #start,
          [],
        ),
        returnValue: _FakeViewBase_6<_i7.ViewModel<_i8.Coordinator>>(
          this,
          Invocation.method(
            #start,
            [],
          ),
        ),
      ) as _i9.ViewBase<_i7.ViewModel<_i8.Coordinator>>);

  @override
  List<_i4.Widget> starts() => (super.noSuchMethod(
        Invocation.method(
          #starts,
          [],
        ),
        returnValue: <_i4.Widget>[],
      ) as List<_i4.Widget>);

  @override
  _i14.Future<bool> showInBottomSheet(
    _i4.Widget? view, {
    _i17.Color? backgroundColor,
    bool? fullScreen = false,
    bool? enableDrag = true,
    bool? isDismissible = true,
    bool? canPop = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showInBottomSheet,
          [view],
          {
            #backgroundColor: backgroundColor,
            #fullScreen: fullScreen,
            #enableDrag: enableDrag,
            #isDismissible: isDismissible,
            #canPop: canPop,
          },
        ),
        returnValue: _i14.Future<bool>.value(false),
      ) as _i14.Future<bool>);

  @override
  void pushReplacement(
    _i4.Widget? view, {
    bool? fullscreenDialog = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #pushReplacement,
          [view],
          {#fullscreenDialog: fullscreenDialog},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void pushReplacementRemoveAll(
    _i4.Widget? view, {
    bool? fullscreenDialog = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #pushReplacementRemoveAll,
          [view],
          {#fullscreenDialog: fullscreenDialog},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void push(
    _i4.Widget? view, {
    bool? fullscreenDialog = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #push,
          [view],
          {#fullscreenDialog: fullscreenDialog},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void pop() => super.noSuchMethod(
        Invocation.method(
          #pop,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void pushCustom(
    _i4.Widget? view, {
    bool? fullscreenDialog = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #pushCustom,
          [view],
          {#fullscreenDialog: fullscreenDialog},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void pushReplacementCustom(
    _i4.Widget? view, {
    bool? fullscreenDialog = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #pushReplacementCustom,
          [view],
          {#fullscreenDialog: fullscreenDialog},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showDialog1(_i4.Widget? view) => super.noSuchMethod(
        Invocation.method(
          #showDialog1,
          [view],
        ),
        returnValueForMissingStub: null,
      );
}
