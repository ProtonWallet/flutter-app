plugins {
    id "com.android.application" version '8.1.3'
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'com.google.gms.google-services' // for FCM
    id 'com.google.devtools.ksp' version '1.8.10-1.0.9'
    id "com.google.protobuf"
    id "org.jetbrains.kotlin.android" version '1.8.10'
    id "org.jetbrains.kotlin.plugin.serialization" version '1.8.10'
//    id "me.proton.core.gradle-plugins.environment-config"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

repositories {
    flatDir {
        dirs 'libs'
    }
}


dependencies {
    def core_version = "18.2.0"
    def dagger_version = "2.46.1"
    def room_version = "2.4.3"
    def androidx_activity_version = "1.6.1"
    def androidx_compose_version = "1.4.2"

    implementation(platform("com.google.firebase:firebase-bom:32.7.0"))
    implementation 'com.google.firebase:firebase-messaging:23.2.1'
    implementation platform('androidx.compose:compose-bom:2023.01.00')

    implementation files("libs/gopenpgp.aar")
    implementation "androidx.activity:activity:$androidx_activity_version"
    implementation "androidx.activity:activity-ktx:$androidx_activity_version"
    implementation "androidx.activity:activity-compose:$androidx_activity_version"


    implementation "androidx.compose.foundation:foundation:$androidx_compose_version"
    implementation "androidx.compose.foundation:foundation-layout:$androidx_compose_version"
    implementation "androidx.compose.material:material:$androidx_compose_version"
    implementation "androidx.compose.material:material-icons-extended:$androidx_compose_version"
    implementation "androidx.compose.runtime:runtime:$androidx_compose_version"
    implementation "androidx.compose.ui:ui:$androidx_compose_version"
    implementation "androidx.compose.ui:ui-tooling:$androidx_compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$androidx_compose_version"
    implementation "androidx.compose.ui:ui-test-manifest:$androidx_compose_version"

    implementation "androidx.navigation:navigation-compose:2.6.0-rc02"

    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.core:core-splashscreen:1.0.1"
    implementation "org.jetbrains.kotlinx:kotlinx-datetime:0.3.3"

    implementation 'androidx.lifecycle:lifecycle-process:2.4.6'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.6'
    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.4.6'
    implementation 'androidx.startup:startup-runtime:1.1.1'
    implementation "androidx.hilt:hilt-compiler:1.0.0"
    implementation "androidx.hilt:hilt-work:1.0.0"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    implementation "com.google.dagger:hilt-android:$dagger_version"
    kapt "com.google.dagger:hilt-compiler:$dagger_version"

    // For instrumentation/unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$dagger_version"

    // For Configurator integration (debug/release).
    debugImplementation "me.proton.core:configuration-dagger-content-resolver:$core_version"
    releaseImplementation "me.proton.core:configuration-dagger-staticdefaults:$core_version"

    implementation "me.proton.core:account:$core_version"
    implementation "me.proton.core:account-manager:$core_version"
    implementation "me.proton.core:account-recovery:$core_version"
    implementation "me.proton.core:auth:$core_version"
    implementation "me.proton.core:challenge:$core_version"
    implementation "me.proton.core:configuration-data:$core_version"
    implementation "me.proton.core:crypto:$core_version"
    implementation "me.proton.core:crypto-validator:$core_version"
    implementation "me.proton.core:country:$core_version"
    implementation "me.proton.core:data:$core_version"
    implementation "me.proton.core:domain:$core_version"
    implementation "me.proton.core:event-manager:$core_version"
    implementation "me.proton.core:feature-flag:$core_version"
    implementation "me.proton.core:human-verification:$core_version"
    implementation "me.proton.core:key:$core_version"
    implementation "me.proton.core:key-transparency:$core_version"
    implementation "me.proton.core:network:$core_version"
    implementation "me.proton.core:notification:$core_version"
    implementation "me.proton.core:observability:$core_version"
    implementation "me.proton.core:payment:$core_version"
    implementation "me.proton.core:payment-iap:$core_version"
    implementation "me.proton.core:plan:$core_version"
    implementation "me.proton.core:presentation:$core_version"
    implementation "me.proton.core:presentation-compose:$core_version"
    implementation "me.proton.core:proguard-rules:$core_version"
    implementation "me.proton.core:push:$core_version"
    implementation "me.proton.core:report:$core_version"
    implementation "me.proton.core:telemetry:$core_version"
    implementation "me.proton.core:user:$core_version"
    implementation "me.proton.core:user-settings:$core_version"
    implementation "me.proton.core:util-android-dagger:$core_version"
    implementation "me.proton.core:util-android-device:$core_version"
    implementation "me.proton.core:util-android-sentry:$core_version"
    implementation "me.proton.core:util-kotlin:$core_version"

    // dependency from ProtonPass
    // TODO:: need to check useless dependency
    implementation 'androidx.annotation:annotation:1.5.0'
    implementation 'androidx.autofill:autofill:1.1.0'
    implementation 'androidx.benchmark:benchmark-junit4:1.1.1'
    implementation 'androidx.benchmark:benchmark-macro-junit4:1.1.1'
    implementation 'androidx.biometric:biometric:1.2.0-alpha05'
    implementation 'androidx.camera:camera-camera2:1.2.1'
    implementation 'androidx.camera:camera-core:1.2.1'
    implementation 'androidx.camera:camera-extensions:1.2.1'
    implementation 'androidx.camera:camera-lifecycle:1.2.1'
    implementation 'androidx.camera:camera-view:1.2.1'
    implementation 'androidx.compose.ui:ui-test-junit4:1.4.3'
    implementation 'androidx.compose.ui:ui-test:1.4.3'
    implementation 'androidx.datastore:datastore:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-savedstate:2.6.1'
    implementation 'androidx.profileinstaller:profileinstaller:1.3.1'
//    implementation 'androidx.room:room-compiler:2.4.3'
    implementation 'androidx.room:room-testing:2.4.3'
    implementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'androidx.test.espresso:espresso-intents:3.5.1'
    implementation 'androidx.test.ext:junit:1.1.5'
    implementation 'androidx.test.uiautomator:uiautomator:2.3.0-alpha02'
    implementation 'androidx.test:core-ktx:1.5.0'
    implementation 'androidx.test:core:1.5.0'
    implementation 'androidx.test:orchestrator:1.4.2'
    implementation 'androidx.test:rules:1.5.0'
    implementation 'androidx.test:runner:1.5.0'
    implementation 'androidx.work:work-runtime-ktx:2.7.1'
//    implementation 'com.airbnb.android:showkase-processor:1.0.0-beta13'
//    implementation 'com.airbnb.android:showkase:1.0.0-beta13'
//    implementation 'com.android.application:8.1.3'
//    implementation 'com.android.library:8.1.3'
//    implementation 'com.android.test:8.1.3'
//    implementation 'com.autonomousapps.dependency-analysis:1.20.0'
//    implementation 'com.github.skydoves:compose-stable-marker:1.0.0'
    implementation 'com.google.accompanist:accompanist-navigation-material:0.30.1'
    implementation 'com.google.accompanist:accompanist-pager-indicators:0.30.1'
    implementation 'com.google.accompanist:accompanist-permissions:0.30.1'
    implementation 'com.google.accompanist:accompanist-placeholder-material:0.30.1'
    implementation 'com.google.accompanist:accompanist-placeholder:0.30.1'
    implementation 'com.google.accompanist:accompanist-systemuicontroller:0.30.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'com.google.android.play:app-update-ktx:2.1.0'
    implementation 'com.google.android.play:review-ktx:2.0.1'
    implementation 'com.google.android.play:review:2.0.1'
//    implementation 'com.google.dagger.hilt.android:2.46.1'
    implementation 'com.google.dagger:hilt-android-compiler:2.46.1'
    implementation 'com.google.dagger:hilt-android-testing:2.46.1'
//    implementation 'com.google.dagger:hilt-compiler:2.46.1'
    implementation 'com.google.testparameterinjector:test-parameter-injector:1.10'
    implementation 'com.google.truth:truth:1.1.5'
    implementation 'com.google.zxing:core:3.5.1'
    implementation 'com.jakewharton.timber:timber:5.0.1'
//    implementation 'com.osacky.doctor:0.8.1'
//    implementation 'com.osacky.fulladle:0.17.4'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.12'
    debugImplementation 'com.squareup.leakcanary:plumber-android:2.12'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'io.coil-kt:coil-base:2.2.2'
    implementation 'io.coil-kt:coil-compose:2.2.2'
    implementation 'io.coil-kt:coil-gif:2.2.2'
    implementation 'io.coil-kt:coil-svg:2.2.2'
    implementation 'io.coil-kt:coil:2.2.2'
//    implementation 'io.sentry.android.gradle:3.5.0'
    implementation 'io.sentry:sentry-android-core:6.18.1'
    implementation 'io.sentry:sentry-android-timber:6.18.1'
    implementation 'io.sentry:sentry:6.18.1'
    implementation 'junit:junit:4.13.2'

//    implementation 'me.proton.core.gradle-plugins.detekt:1.1.1'
    implementation 'me.proton.core:account-domain:18.2.0'
    implementation 'me.proton.core:account-manager-domain:18.2.0'
    implementation 'me.proton.core:account-manager-presentation-compose:18.2.0'
    implementation 'me.proton.core:account-recovery-test:18.2.0'
    implementation 'me.proton.core:auth-test:18.2.0'
    implementation 'me.proton.core:crypto-android:18.2.0'
    implementation 'me.proton.core:crypto-common:18.2.0'
    implementation 'me.proton.core:data-room:18.2.0'
    implementation 'me.proton.core:feature-flag-domain:18.2.0'
    implementation 'me.proton.core:human-verification-test:18.2.0'
    implementation 'me.proton.core:key-domain:18.2.0'
    implementation 'me.proton.core:network-data:18.2.0'
    implementation 'me.proton.core:network-domain:18.2.0'
    implementation 'me.proton.core:payment-domain:18.2.0'
    implementation 'me.proton.core:plan-test:18.2.0'
    implementation 'me.proton.core:test-android-instrumented:18.2.0'
    implementation 'me.proton.core:test-android:18.2.0'
    implementation 'me.proton.core:test-kotlin:18.2.0'
    implementation 'me.proton.core:user-domain:18.2.0'
    implementation 'me.proton.core:user-settings-domain:18.2.0'
    implementation 'me.proton.core:user-settings-presentation-compose:18.2.0'
    implementation 'me.proton.pass.common:lib:0.3.1'
    implementation 'me.proton.test:fusion:0.9.52'

//    implementation 'net.java.dev.jna:jna:5.13.0'
//    implementation 'org.jetbrains.kotlin.jvm:1.8.10'
//    implementation 'org.jetbrains.kotlin.plugin.serialization:1.8.10'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.8.10'
    implementation 'org.jetbrains.kotlin:kotlin-test:1.8.10'
    implementation 'org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.5'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1'

}


android {
    namespace "com.example.wallet"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        buildConfig true
        compose true
        dataBinding true // required by Core presentation
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.2"
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()

    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    configurations {
        implementation.exclude group: 'com.intellij', module: 'annotations'
        implementation.exclude group: 'com.intellij', module: 'annotations'
    }

    packagingOptions{
        pickFirst '**'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.wallet"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        minSdkVersion 24

        javaCompileOptions {
            annotationProcessorOptions {
                arguments["room.schemaLocation"] = "$projectDir/schemas"
                arguments["room.incremental"] = "true"
            }
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug

            debuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
// Allow references to generated code
kapt {
    correctErrorTypes true
}

flutter {
    source '../..'
}

//[
//        Debug  : null,
//        Profile: '--release',
//        Release: '--release'
//].each {
//    def taskPostfix = it.key
//    def profileMode = it.value
//    tasks.configureEach { task ->
//        if (task.name == "javaPreCompile$taskPostfix") {
//            task.dependsOn "cargoBuild-arm64-v8a$taskPostfix"
////            task.dependsOn "cargoBuild-arm64-v8a$taskPostfix", "cargoBuild-armeabi-v7a$taskPostfix", "cargoBuild-x86$taskPostfix"
//        }
//    }
//    tasks.register("cargoBuild-arm64-v8a$taskPostfix", Exec) {
//        workingDir "../../rust"  // <-- ATTENTION: CHECK THE CORRECT FOLDER!!!
//        environment ANDROID_NDK_HOME: localProperties.getProperty('ndk.dir')
//        commandLine 'cargo', 'ndk',
//                '-t', 'arm64-v8a',
//                '-o', '../android/app/src/main/jniLibs', 'build'
//        if (profileMode != null) {
//            args profileMode
//        }
//    }
//
//    tasks.register("cargoBuild-armeabi-v7a$taskPostfix", Exec) {
//        workingDir "../../rust"  // <-- ATTENTION: CHECK THE CORRECT FOLDER!!!
//        environment ANDROID_NDK_HOME: localProperties.getProperty('ndk.dir')
//        commandLine 'cargo', 'ndk',
//                '-t', 'armeabi-v7a',
//               '-o', '../android/app/src/main/jniLibs', 'build'
//        if (profileMode != null) {
//            args profileMode
//        }
//    }
//
//    tasks.register("cargoBuild-x86$taskPostfix", Exec) {
//        workingDir "../../rust"  // <-- ATTENTION: CHECK THE CORRECT FOLDER!!!
//        environment ANDROID_NDK_HOME: localProperties.getProperty('ndk.dir')
//        commandLine 'cargo', 'ndk',
//                '-t', 'x86',
//               '-o', '../android/app/src/main/jniLibs', 'build'
//        if (profileMode != null) {
//            args profileMode
//        }
//    }
//}

task DependenciesReport {

}