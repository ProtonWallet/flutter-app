// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.33.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class AuthCredential {
  final String sessionId;
  final String userId;
  final String accessToken;
  final String refreshToken;
  final String eventId;
  final String userMail;
  final String userName;
  final String displayName;
  final List<String> scops;
  final String userKeyId;
  final String userPrivateKey;
  final String userPassphrase;

  const AuthCredential({
    required this.sessionId,
    required this.userId,
    required this.accessToken,
    required this.refreshToken,
    required this.eventId,
    required this.userMail,
    required this.userName,
    required this.displayName,
    required this.scops,
    required this.userKeyId,
    required this.userPrivateKey,
    required this.userPassphrase,
  });

  @override
  int get hashCode =>
      sessionId.hashCode ^
      userId.hashCode ^
      accessToken.hashCode ^
      refreshToken.hashCode ^
      eventId.hashCode ^
      userMail.hashCode ^
      userName.hashCode ^
      displayName.hashCode ^
      scops.hashCode ^
      userKeyId.hashCode ^
      userPrivateKey.hashCode ^
      userPassphrase.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is AuthCredential &&
          runtimeType == other.runtimeType &&
          sessionId == other.sessionId &&
          userId == other.userId &&
          accessToken == other.accessToken &&
          refreshToken == other.refreshToken &&
          eventId == other.eventId &&
          userMail == other.userMail &&
          userName == other.userName &&
          displayName == other.displayName &&
          scops == other.scops &&
          userKeyId == other.userKeyId &&
          userPrivateKey == other.userPrivateKey &&
          userPassphrase == other.userPassphrase;
}

class ChildSession {
  final String sessionId;
  final String accessToken;
  final String refreshToken;
  final List<String> scopes;

  const ChildSession({
    required this.sessionId,
    required this.accessToken,
    required this.refreshToken,
    required this.scopes,
  });

  @override
  int get hashCode =>
      sessionId.hashCode ^
      accessToken.hashCode ^
      refreshToken.hashCode ^
      scopes.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ChildSession &&
          runtimeType == other.runtimeType &&
          sessionId == other.sessionId &&
          accessToken == other.accessToken &&
          refreshToken == other.refreshToken &&
          scopes == other.scopes;
}
