// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.21.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'wallet_settings_routes.dart';

class CreateWalletReq {
  final String name;
  final int isImported;
  final int type;
  final int hasPassphrase;
  final String userKeyId;
  final String walletKey;
  final String? mnemonic;
  final String? publicKey;

  const CreateWalletReq({
    required this.name,
    required this.isImported,
    required this.type,
    required this.hasPassphrase,
    required this.userKeyId,
    required this.walletKey,
    this.mnemonic,
    this.publicKey,
  });

  @override
  int get hashCode =>
      name.hashCode ^
      isImported.hashCode ^
      type.hashCode ^
      hasPassphrase.hashCode ^
      userKeyId.hashCode ^
      walletKey.hashCode ^
      mnemonic.hashCode ^
      publicKey.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is CreateWalletReq &&
          runtimeType == other.runtimeType &&
          name == other.name &&
          isImported == other.isImported &&
          type == other.type &&
          hasPassphrase == other.hasPassphrase &&
          userKeyId == other.userKeyId &&
          walletKey == other.walletKey &&
          mnemonic == other.mnemonic &&
          publicKey == other.publicKey;
}

class CreateWalletResponse {
  final int code;
  final ProtonWallet wallet;
  final ProtonWalletKey walletKey;
  final WalletSettings walletSettings;

  const CreateWalletResponse({
    required this.code,
    required this.wallet,
    required this.walletKey,
    required this.walletSettings,
  });

  @override
  int get hashCode =>
      code.hashCode ^
      wallet.hashCode ^
      walletKey.hashCode ^
      walletSettings.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is CreateWalletResponse &&
          runtimeType == other.runtimeType &&
          code == other.code &&
          wallet == other.wallet &&
          walletKey == other.walletKey &&
          walletSettings == other.walletSettings;
}

class ProtonWallet {
  final String id;
  final int hasPassphrase;
  final int isImported;
  final String? mnemonic;
  final String name;
  final int priority;
  final String? publicKey;
  final int status;
  final int type;

  const ProtonWallet({
    required this.id,
    required this.hasPassphrase,
    required this.isImported,
    this.mnemonic,
    required this.name,
    required this.priority,
    this.publicKey,
    required this.status,
    required this.type,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      hasPassphrase.hashCode ^
      isImported.hashCode ^
      mnemonic.hashCode ^
      name.hashCode ^
      priority.hashCode ^
      publicKey.hashCode ^
      status.hashCode ^
      type.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ProtonWallet &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          hasPassphrase == other.hasPassphrase &&
          isImported == other.isImported &&
          mnemonic == other.mnemonic &&
          name == other.name &&
          priority == other.priority &&
          publicKey == other.publicKey &&
          status == other.status &&
          type == other.type;
}

class ProtonWalletKey {
  final String userKeyId;
  final String walletKey;

  const ProtonWalletKey({
    required this.userKeyId,
    required this.walletKey,
  });

  @override
  int get hashCode => userKeyId.hashCode ^ walletKey.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ProtonWalletKey &&
          runtimeType == other.runtimeType &&
          userKeyId == other.userKeyId &&
          walletKey == other.walletKey;
}

class WalletData {
  final ProtonWallet wallet;
  final ProtonWalletKey walletKey;
  final WalletSettings? walletSettings;

  const WalletData({
    required this.wallet,
    required this.walletKey,
    this.walletSettings,
  });

  @override
  int get hashCode =>
      wallet.hashCode ^ walletKey.hashCode ^ walletSettings.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is WalletData &&
          runtimeType == other.runtimeType &&
          wallet == other.wallet &&
          walletKey == other.walletKey &&
          walletSettings == other.walletSettings;
}

class WalletsResponse {
  final int code;
  final List<WalletData> wallets;

  const WalletsResponse({
    required this.code,
    required this.wallets,
  });

  @override
  int get hashCode => code.hashCode ^ wallets.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is WalletsResponse &&
          runtimeType == other.runtimeType &&
          code == other.code &&
          wallets == other.wallets;
}
