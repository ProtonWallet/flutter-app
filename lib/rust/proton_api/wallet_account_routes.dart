// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.21.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class CreateWalletAccountReq {
  final String label;
  final String derivationPath;
  final int scriptType;

  const CreateWalletAccountReq({
    required this.label,
    required this.derivationPath,
    required this.scriptType,
  });

  @override
  int get hashCode =>
      label.hashCode ^ derivationPath.hashCode ^ scriptType.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is CreateWalletAccountReq &&
          runtimeType == other.runtimeType &&
          label == other.label &&
          derivationPath == other.derivationPath &&
          scriptType == other.scriptType;
}

class WalletAccount {
  final String id;
  final String derivationPath;
  final String label;
  final int scriptType;

  const WalletAccount({
    required this.id,
    required this.derivationPath,
    required this.label,
    required this.scriptType,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      derivationPath.hashCode ^
      label.hashCode ^
      scriptType.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is WalletAccount &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          derivationPath == other.derivationPath &&
          label == other.label &&
          scriptType == other.scriptType;
}

class WalletAccountResponse {
  final int code;
  final WalletAccount account;

  const WalletAccountResponse({
    required this.code,
    required this.account,
  });

  @override
  int get hashCode => code.hashCode ^ account.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is WalletAccountResponse &&
          runtimeType == other.runtimeType &&
          code == other.code &&
          account == other.account;
}

class WalletAccountsResponse {
  final int code;
  final List<WalletAccount> accounts;

  const WalletAccountsResponse({
    required this.code,
    required this.accounts,
  });

  @override
  int get hashCode => code.hashCode ^ accounts.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is WalletAccountsResponse &&
          runtimeType == other.runtimeType &&
          code == other.code &&
          accounts == other.accounts;
}
