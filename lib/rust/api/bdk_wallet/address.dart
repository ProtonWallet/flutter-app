// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.33.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../common/errors.dart';
import '../../common/network.dart';
import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'script_buf.dart';

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<FrbAddress>>
@sealed
class FrbAddress extends RustOpaque {
  FrbAddress.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  FrbAddress.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_FrbAddress,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_FrbAddress,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_FrbAddressPtr,
  );

  static FrbAddress fromScript(
          {required FrbScriptBuf script,
          required Network network,
          dynamic hint}) =>
      RustLib.instance.api
          .frbAddressFromScript(script: script, network: network, hint: hint);

  FrbScriptBuf intoScript({dynamic hint}) =>
      RustLib.instance.api.frbAddressIntoScript(that: this, hint: hint);

  factory FrbAddress(
          {required String address, required Network network, dynamic hint}) =>
      RustLib.instance.api
          .frbAddressNew(address: address, network: network, hint: hint);

  String toString({dynamic hint}) =>
      RustLib.instance.api.frbAddressToString(that: this, hint: hint);
}
