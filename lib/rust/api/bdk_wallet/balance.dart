// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.33.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'amount.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<FrbBalance>>
@sealed
class FrbBalance extends RustOpaque {
  FrbBalance.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  FrbBalance.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_FrbBalance,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_FrbBalance,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_FrbBalancePtr,
  );

  /// Get the whole balance visible to the wallet.
  FrbAmount total({dynamic hint}) =>
      RustLib.instance.api.frbBalanceTotal(that: this, hint: hint);

  /// Get sum of trusted_pending and confirmed coins.
  ///
  /// This is the balance you can spend right now that shouldn't get cancelled via another party
  /// double spending it.
  FrbAmount trustedSpendable({dynamic hint}) =>
      RustLib.instance.api.frbBalanceTrustedSpendable(that: this, hint: hint);
}
