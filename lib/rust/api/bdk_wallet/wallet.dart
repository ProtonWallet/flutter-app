// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.1.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../common/errors.dart';
import '../../common/network.dart';
import '../../common/pagination.dart';
import '../../common/script_type.dart';
import '../../frb_generated.dart';
import 'account.dart';
import 'balance.dart';
import 'derivation_path.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'storage.dart';
import 'transaction_details.dart';

// These functions are ignored because they are not marked as `pub`: `get_inner`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `fmt`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<FrbWallet>>
abstract class FrbWallet implements RustOpaqueInterface {
  FrbAccount addAccount(
      {required ScriptType scriptType,
      required String derivationPath,
      required OnchainStoreFactory storageFactory});

  FrbAccount? getAccount({required String derivationPath});

  Future<FrbBalance> getBalance();

  String getFingerprint();

  Future<FrbTransactionDetails> getTransaction(
      {required FrbDerivationPath accountKey, required String txid});

  Future<List<FrbTransactionDetails>> getTransactions(
      {Pagination? pagination, SortOrder? sort});

  factory FrbWallet(
          {required Network network,
          required String bip39Mnemonic,
          String? bip38Passphrase}) =>
      RustLib.instance.api.crateApiBdkWalletWalletFrbWalletNew(
          network: network,
          bip39Mnemonic: bip39Mnemonic,
          bip38Passphrase: bip38Passphrase);
}
