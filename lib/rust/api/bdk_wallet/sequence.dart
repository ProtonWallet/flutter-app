// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.33.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<FrbSequence>>
@sealed
class FrbSequence extends RustOpaque {
  FrbSequence.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  FrbSequence.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        RustLib.instance.api.rust_arc_increment_strong_count_FrbSequence,
    rustArcDecrementStrongCount:
        RustLib.instance.api.rust_arc_decrement_strong_count_FrbSequence,
    rustArcDecrementStrongCountPtr:
        RustLib.instance.api.rust_arc_decrement_strong_count_FrbSequencePtr,
  );

  /// Returns `true` if the sequence number indicates that the transaction is finalized.
  bool isFinal({dynamic hint}) =>
      RustLib.instance.api.frbSequenceIsFinal(that: this, hint: hint);

  /// Returns `true` if the sequence number encodes a block based relative lock-time.
  bool isHeightLocked({dynamic hint}) =>
      RustLib.instance.api.frbSequenceIsHeightLocked(that: this, hint: hint);

  /// Returns true if the transaction opted-in to BIP125 replace-by-fee.
  bool isRbf({dynamic hint}) =>
      RustLib.instance.api.frbSequenceIsRbf(that: this, hint: hint);

  /// Returns `true` if the sequence has a relative lock-time.
  bool isRelativeLockTime({dynamic hint}) => RustLib.instance.api
      .frbSequenceIsRelativeLockTime(that: this, hint: hint);

  /// Returns `true` if the sequence number encodes a time interval based relative lock-time.
  bool isTimeLocked({dynamic hint}) =>
      RustLib.instance.api.frbSequenceIsTimeLocked(that: this, hint: hint);
}
