// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.1.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../common/errors.dart';
import '../../common/word_count.dart';
import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `from_str`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `fmt`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<FrbMnemonic>>
abstract class FrbMnemonic implements RustOpaqueInterface {
  /// Create a new Mnemonic in the specified language from the given entropy.
  /// Entropy must be a multiple of 32 bits (4 bytes) and 128-256 bits in length.
  /// Returns the Mnemonic as a string.
  String asString();

  /// Returns the mnemonic as words array
  List<String> asWords();

  /// Parse a Mnemonic with the given string.
  static FrbMnemonic fromString({required String mnemonic}) =>
      RustLib.instance.api
          .crateApiBdkWalletMnemonicFrbMnemonicFromString(mnemonic: mnemonic);

  static List<String> getWordsAutocomplete({required String wordStart}) =>
      RustLib.instance.api
          .crateApiBdkWalletMnemonicFrbMnemonicGetWordsAutocomplete(
              wordStart: wordStart);

  /// Create a new Mnemonic with the given word count.
  factory FrbMnemonic({required WordCount wordCount}) => RustLib.instance.api
      .crateApiBdkWalletMnemonicFrbMnemonicNew(wordCount: wordCount);

  static FrbMnemonic newWith({required List<int> entropy}) =>
      RustLib.instance.api
          .crateApiBdkWalletMnemonicFrbMnemonicNewWith(entropy: entropy);
}
