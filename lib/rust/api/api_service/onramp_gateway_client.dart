// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.1.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import '../../proton_api/payment_gateway.dart';
import '../errors.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'proton_api_service.dart';

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<OnRampGatewayClient>>
abstract class OnRampGatewayClient implements RustOpaqueInterface {
  Future<String> createOnRampCheckout(
      {required String amount,
      required String btcAddress,
      required String fiatCurrency,
      required PaymentMethod payMethod,
      required GatewayProvider provider});

  Future<Map<GatewayProvider, List<ApiCountry>>> getCountries();

  Future<Map<GatewayProvider, List<ApiSimpleFiatCurrency>>> getFiatCurrencies();

  Future<Map<GatewayProvider, List<PaymentMethod>>> getPaymentMethods(
      {required String fiatSymbol});

  Future<String> getPublicApiKey({required GatewayProvider provider});

  Future<Map<GatewayProvider, List<Quote>>> getQuotes(
      {required double amount,
      required String fiatCurrency,
      PaymentMethod? payMethod,
      GatewayProvider? provider});

  // HINT: Make it `#[frb(sync)]` to let it become the default constructor of Dart class.
  static Future<OnRampGatewayClient> newInstance(
          {required ProtonApiService service}) =>
      RustLib.instance.api
          .crateApiApiServiceOnrampGatewayClientOnRampGatewayClientNew(
              service: service);
}
