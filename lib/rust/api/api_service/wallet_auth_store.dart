// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.1.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import '../../proton_api/auth_credential.dart';
import '../errors.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `from_auth`, `refresh_auth_credential`
// These types are ignored because they are not used by any `pub` functions: `GLOBAL_SESSION_DART_CALLBACK`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `deref`, `env`, `fmt`, `get_auth`, `initialize`, `set_auth`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ProtonWalletAuthStore>>
abstract class ProtonWalletAuthStore implements RustOpaqueInterface {
  Future<void> clearAuthDartCallback();

  static ProtonWalletAuthStore fromSession(
          {required String env,
          required String uid,
          required String access,
          required String refresh,
          required List<String> scopes}) =>
      RustLib.instance.api
          .crateApiApiServiceWalletAuthStoreProtonWalletAuthStoreFromSession(
              env: env,
              uid: uid,
              access: access,
              refresh: refresh,
              scopes: scopes);

  Future<void> logout();

  factory ProtonWalletAuthStore({required String env}) => RustLib.instance.api
      .crateApiApiServiceWalletAuthStoreProtonWalletAuthStoreNew(env: env);

  Future<void> setAuthDartCallback(
      {required FutureOr<String> Function(ChildSession) callback});

  void setAuthSync(
      {required String uid,
      required String access,
      required String refresh,
      required List<String> scopes});
}
