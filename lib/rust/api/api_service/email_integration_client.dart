// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.33.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../common/errors.dart';
import '../../frb_generated.dart';
import '../../proton_api/wallet.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'proton_api_service.dart';

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<EmailIntegrationClient>>
@sealed
class EmailIntegrationClient extends RustOpaque {
  EmailIntegrationClient.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  EmailIntegrationClient.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_EmailIntegrationClient,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_EmailIntegrationClient,
    rustArcDecrementStrongCountPtr: RustLib
        .instance.api.rust_arc_decrement_strong_count_EmailIntegrationClientPtr,
  );

  Future<EmailIntegrationBitcoinAddress> lookupBitcoinAddress(
          {required String email, dynamic hint}) =>
      RustLib.instance.api.emailIntegrationClientLookupBitcoinAddress(
          that: this, email: email, hint: hint);

  // HINT: Make it `#[frb(sync)]` to let it become the default constructor of Dart class.
  static Future<EmailIntegrationClient> newInstance(
          {required ProtonApiService service, dynamic hint}) =>
      RustLib.instance.api
          .emailIntegrationClientNew(service: service, hint: hint);
}
