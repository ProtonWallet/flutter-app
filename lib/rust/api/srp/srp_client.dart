// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.1.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../common/errors.dart';
import '../../frb_generated.dart';
import '../../srp/proofs.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class SrpClient {
  const SrpClient.raw();

  static Future<String> computeKeyPassword(
          {required String password, required List<int> salt}) =>
      RustLib.instance.api.crateApiSrpSrpClientSrpClientComputeKeyPassword(
          password: password, salt: salt);

  static Future<SRPProofB64> generateProofs(
          {required String loginPassword,
          required int version,
          required String salt,
          required String modulus,
          required String serverEphemeral}) =>
      RustLib.instance.api.crateApiSrpSrpClientSrpClientGenerateProofs(
          loginPassword: loginPassword,
          version: version,
          salt: salt,
          modulus: modulus,
          serverEphemeral: serverEphemeral);

  static Future<SRPVerifierB64> generateVerifer(
          {required String password,
          String? saltOpt,
          required String serverModulus}) =>
      RustLib.instance.api.crateApiSrpSrpClientSrpClientGenerateVerifer(
          password: password, saltOpt: saltOpt, serverModulus: serverModulus);

  factory SrpClient() =>
      RustLib.instance.api.crateApiSrpSrpClientSrpClientNew();

  @override
  int get hashCode => 0;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is SrpClient && runtimeType == other.runtimeType;
}
