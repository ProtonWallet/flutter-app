// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.28.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'api/api2.dart';
import 'api/bdk_wallet.dart';
import 'api/flutter_logger.dart';
import 'api/ldk_api.dart';
import 'api/proton_api.dart';
import 'api/proton_api_service.dart';
import 'api/rust_api.dart';
import 'api/rust_objects.dart';
import 'bdk/blockchain.dart';
import 'bdk/error.dart';
import 'bdk/types.dart';
import 'bdk/wallet.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';
import 'proton_api/contacts.dart';
import 'proton_api/errors.dart';
import 'proton_api/event_routes.dart';
import 'proton_api/exchange_rate.dart';
import 'proton_api/proton_address.dart';
import 'proton_api/user_settings.dart';
import 'proton_api/wallet.dart';
import 'proton_api/wallet_account.dart';
import 'proton_api/wallet_settings.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BdkWalletManagerPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManagerPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_ProtonApiServicePtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIServicePtr;

  @protected
  BdkWalletManager
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManager(
          dynamic raw);

  @protected
  ProtonApiService
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIService(
          dynamic raw);

  @protected
  BdkWalletManager
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManager(
          dynamic raw);

  @protected
  ProtonApiService
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIService(
          dynamic raw);

  @protected
  BdkWalletManager
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManager(
          dynamic raw);

  @protected
  ProtonApiService
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIService(
          dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  AddressIndex dco_decode_address_index(dynamic raw);

  @protected
  AddressInfo dco_decode_address_info(dynamic raw);

  @protected
  ApiError dco_decode_api_error(dynamic raw);

  @protected
  ApiUserSettings dco_decode_api_user_settings(dynamic raw);

  @protected
  Balance dco_decode_balance(dynamic raw);

  @protected
  BitcoinAddress dco_decode_bitcoin_address(dynamic raw);

  @protected
  BitcoinUnit dco_decode_bitcoin_unit(dynamic raw);

  @protected
  BlockTime dco_decode_block_time(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  AddressIndex dco_decode_box_autoadd_address_index(dynamic raw);

  @protected
  ApiUserSettings dco_decode_box_autoadd_api_user_settings(dynamic raw);

  @protected
  BitcoinAddress dco_decode_box_autoadd_bitcoin_address(dynamic raw);

  @protected
  BlockTime dco_decode_box_autoadd_block_time(dynamic raw);

  @protected
  CreateWalletAccountReq dco_decode_box_autoadd_create_wallet_account_req(
      dynamic raw);

  @protected
  CreateWalletReq dco_decode_box_autoadd_create_wallet_req(dynamic raw);

  @protected
  DatabaseConfig dco_decode_box_autoadd_database_config(dynamic raw);

  @protected
  EsploraConfig dco_decode_box_autoadd_esplora_config(dynamic raw);

  @protected
  double dco_decode_box_autoadd_f_32(dynamic raw);

  @protected
  LocalUtxo dco_decode_box_autoadd_local_utxo(dynamic raw);

  @protected
  MyTestObject dco_decode_box_autoadd_my_test_object(dynamic raw);

  @protected
  OutPoint dco_decode_box_autoadd_out_point(dynamic raw);

  @protected
  ProtonContactEmails dco_decode_box_autoadd_proton_contact_emails(dynamic raw);

  @protected
  ProtonExchangeRate dco_decode_box_autoadd_proton_exchange_rate(dynamic raw);

  @protected
  ProtonWallet dco_decode_box_autoadd_proton_wallet(dynamic raw);

  @protected
  ProtonWalletKey dco_decode_box_autoadd_proton_wallet_key(dynamic raw);

  @protected
  PsbtSigHashType dco_decode_box_autoadd_psbt_sig_hash_type(dynamic raw);

  @protected
  RbfValue dco_decode_box_autoadd_rbf_value(dynamic raw);

  @protected
  (OutPoint, String, int) dco_decode_box_autoadd_record_out_point_string_usize(
      dynamic raw);

  @protected
  Script dco_decode_box_autoadd_script(dynamic raw);

  @protected
  SignOptions dco_decode_box_autoadd_sign_options(dynamic raw);

  @protected
  SqliteDbConfiguration dco_decode_box_autoadd_sqlite_db_configuration(
      dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_32(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_64(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_8(dynamic raw);

  @protected
  WalletAccount dco_decode_box_autoadd_wallet_account(dynamic raw);

  @protected
  WalletSettings dco_decode_box_autoadd_wallet_settings(dynamic raw);

  @protected
  WalletTransaction dco_decode_box_autoadd_wallet_transaction(dynamic raw);

  @protected
  ChangeSpendPolicy dco_decode_change_spend_policy(dynamic raw);

  @protected
  ContactEmailEvent dco_decode_contact_email_event(dynamic raw);

  @protected
  CreateWalletAccountReq dco_decode_create_wallet_account_req(dynamic raw);

  @protected
  CreateWalletReq dco_decode_create_wallet_req(dynamic raw);

  @protected
  DatabaseConfig dco_decode_database_config(dynamic raw);

  @protected
  EmailAddress dco_decode_email_address(dynamic raw);

  @protected
  EmailIntegrationBitcoinAddress dco_decode_email_integration_bitcoin_address(
      dynamic raw);

  @protected
  Error dco_decode_error(dynamic raw);

  @protected
  EsploraConfig dco_decode_esplora_config(dynamic raw);

  @protected
  double dco_decode_f_32(dynamic raw);

  @protected
  FiatCurrency dco_decode_fiat_currency(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  int dco_decode_i_64(dynamic raw);

  @protected
  KeychainKind dco_decode_keychain_kind(dynamic raw);

  @protected
  Level dco_decode_level(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  List<BitcoinAddress> dco_decode_list_bitcoin_address(dynamic raw);

  @protected
  List<ContactEmailEvent> dco_decode_list_contact_email_event(dynamic raw);

  @protected
  List<EmailAddress> dco_decode_list_email_address(dynamic raw);

  @protected
  List<Uint8List> dco_decode_list_list_prim_u_8_strict(dynamic raw);

  @protected
  List<LocalUtxo> dco_decode_list_local_utxo(dynamic raw);

  @protected
  List<OutPoint> dco_decode_list_out_point(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_u_8_loose(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<ProtonAddress> dco_decode_list_proton_address(dynamic raw);

  @protected
  List<ProtonAddressKey> dco_decode_list_proton_address_key(dynamic raw);

  @protected
  List<ProtonContactEmails> dco_decode_list_proton_contact_emails(dynamic raw);

  @protected
  List<ProtonEvent> dco_decode_list_proton_event(dynamic raw);

  @protected
  List<ScriptAmount> dco_decode_list_script_amount(dynamic raw);

  @protected
  List<TransactionDetails> dco_decode_list_transaction_details(dynamic raw);

  @protected
  List<TxIn> dco_decode_list_tx_in(dynamic raw);

  @protected
  List<TxOut> dco_decode_list_tx_out(dynamic raw);

  @protected
  List<WalletAccount> dco_decode_list_wallet_account(dynamic raw);

  @protected
  List<WalletAccountEvent> dco_decode_list_wallet_account_event(dynamic raw);

  @protected
  List<WalletBitcoinAddress> dco_decode_list_wallet_bitcoin_address(
      dynamic raw);

  @protected
  List<WalletData> dco_decode_list_wallet_data(dynamic raw);

  @protected
  List<WalletEvent> dco_decode_list_wallet_event(dynamic raw);

  @protected
  List<WalletKeyEvent> dco_decode_list_wallet_key_event(dynamic raw);

  @protected
  List<WalletSettingsEvent> dco_decode_list_wallet_settings_event(dynamic raw);

  @protected
  List<WalletTransaction> dco_decode_list_wallet_transaction(dynamic raw);

  @protected
  List<WalletTransactionEvent> dco_decode_list_wallet_transaction_event(
      dynamic raw);

  @protected
  LocalUtxo dco_decode_local_utxo(dynamic raw);

  @protected
  LogEntry dco_decode_log_entry(dynamic raw);

  @protected
  MyTestObject dco_decode_my_test_object(dynamic raw);

  @protected
  Network dco_decode_network(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  ApiUserSettings? dco_decode_opt_box_autoadd_api_user_settings(dynamic raw);

  @protected
  BlockTime? dco_decode_opt_box_autoadd_block_time(dynamic raw);

  @protected
  double? dco_decode_opt_box_autoadd_f_32(dynamic raw);

  @protected
  ProtonContactEmails? dco_decode_opt_box_autoadd_proton_contact_emails(
      dynamic raw);

  @protected
  ProtonExchangeRate? dco_decode_opt_box_autoadd_proton_exchange_rate(
      dynamic raw);

  @protected
  ProtonWallet? dco_decode_opt_box_autoadd_proton_wallet(dynamic raw);

  @protected
  ProtonWalletKey? dco_decode_opt_box_autoadd_proton_wallet_key(dynamic raw);

  @protected
  PsbtSigHashType? dco_decode_opt_box_autoadd_psbt_sig_hash_type(dynamic raw);

  @protected
  RbfValue? dco_decode_opt_box_autoadd_rbf_value(dynamic raw);

  @protected
  (OutPoint, String, int)?
      dco_decode_opt_box_autoadd_record_out_point_string_usize(dynamic raw);

  @protected
  Script? dco_decode_opt_box_autoadd_script(dynamic raw);

  @protected
  SignOptions? dco_decode_opt_box_autoadd_sign_options(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_32(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_64(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_8(dynamic raw);

  @protected
  WalletAccount? dco_decode_opt_box_autoadd_wallet_account(dynamic raw);

  @protected
  WalletSettings? dco_decode_opt_box_autoadd_wallet_settings(dynamic raw);

  @protected
  WalletTransaction? dco_decode_opt_box_autoadd_wallet_transaction(dynamic raw);

  @protected
  List<String>? dco_decode_opt_list_String(dynamic raw);

  @protected
  List<ContactEmailEvent>? dco_decode_opt_list_contact_email_event(dynamic raw);

  @protected
  List<ProtonAddressKey>? dco_decode_opt_list_proton_address_key(dynamic raw);

  @protected
  List<WalletAccountEvent>? dco_decode_opt_list_wallet_account_event(
      dynamic raw);

  @protected
  List<WalletEvent>? dco_decode_opt_list_wallet_event(dynamic raw);

  @protected
  List<WalletKeyEvent>? dco_decode_opt_list_wallet_key_event(dynamic raw);

  @protected
  List<WalletSettingsEvent>? dco_decode_opt_list_wallet_settings_event(
      dynamic raw);

  @protected
  List<WalletTransactionEvent>? dco_decode_opt_list_wallet_transaction_event(
      dynamic raw);

  @protected
  OutPoint dco_decode_out_point(dynamic raw);

  @protected
  ProtonAddress dco_decode_proton_address(dynamic raw);

  @protected
  ProtonAddressKey dco_decode_proton_address_key(dynamic raw);

  @protected
  ProtonContactEmails dco_decode_proton_contact_emails(dynamic raw);

  @protected
  ProtonEvent dco_decode_proton_event(dynamic raw);

  @protected
  ProtonExchangeRate dco_decode_proton_exchange_rate(dynamic raw);

  @protected
  ProtonWallet dco_decode_proton_wallet(dynamic raw);

  @protected
  ProtonWalletKey dco_decode_proton_wallet_key(dynamic raw);

  @protected
  PsbtSigHashType dco_decode_psbt_sig_hash_type(dynamic raw);

  @protected
  RbfValue dco_decode_rbf_value(dynamic raw);

  @protected
  (OutPoint, String, int) dco_decode_record_out_point_string_usize(dynamic raw);

  @protected
  (String, Network) dco_decode_record_string_network(dynamic raw);

  @protected
  (String, TransactionDetails) dco_decode_record_string_transaction_details(
      dynamic raw);

  @protected
  Script dco_decode_script(dynamic raw);

  @protected
  ScriptAmount dco_decode_script_amount(dynamic raw);

  @protected
  SignOptions dco_decode_sign_options(dynamic raw);

  @protected
  SqliteDbConfiguration dco_decode_sqlite_db_configuration(dynamic raw);

  @protected
  TransactionDetails dco_decode_transaction_details(dynamic raw);

  @protected
  TxIn dco_decode_tx_in(dynamic raw);

  @protected
  TxOut dco_decode_tx_out(dynamic raw);

  @protected
  int dco_decode_u_16(dynamic raw);

  @protected
  int dco_decode_u_32(dynamic raw);

  @protected
  int dco_decode_u_64(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  int dco_decode_usize(dynamic raw);

  @protected
  WalletAccount dco_decode_wallet_account(dynamic raw);

  @protected
  WalletAccountEvent dco_decode_wallet_account_event(dynamic raw);

  @protected
  WalletBitcoinAddress dco_decode_wallet_bitcoin_address(dynamic raw);

  @protected
  WalletData dco_decode_wallet_data(dynamic raw);

  @protected
  WalletEvent dco_decode_wallet_event(dynamic raw);

  @protected
  WalletKeyEvent dco_decode_wallet_key_event(dynamic raw);

  @protected
  WalletSettings dco_decode_wallet_settings(dynamic raw);

  @protected
  WalletSettingsEvent dco_decode_wallet_settings_event(dynamic raw);

  @protected
  WalletTransaction dco_decode_wallet_transaction(dynamic raw);

  @protected
  WalletTransactionEvent dco_decode_wallet_transaction_event(dynamic raw);

  @protected
  WordCount dco_decode_word_count(dynamic raw);

  @protected
  BdkWalletManager
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManager(
          SseDeserializer deserializer);

  @protected
  ProtonApiService
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIService(
          SseDeserializer deserializer);

  @protected
  BdkWalletManager
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManager(
          SseDeserializer deserializer);

  @protected
  ProtonApiService
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIService(
          SseDeserializer deserializer);

  @protected
  BdkWalletManager
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManager(
          SseDeserializer deserializer);

  @protected
  ProtonApiService
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIService(
          SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  AddressIndex sse_decode_address_index(SseDeserializer deserializer);

  @protected
  AddressInfo sse_decode_address_info(SseDeserializer deserializer);

  @protected
  ApiError sse_decode_api_error(SseDeserializer deserializer);

  @protected
  ApiUserSettings sse_decode_api_user_settings(SseDeserializer deserializer);

  @protected
  Balance sse_decode_balance(SseDeserializer deserializer);

  @protected
  BitcoinAddress sse_decode_bitcoin_address(SseDeserializer deserializer);

  @protected
  BitcoinUnit sse_decode_bitcoin_unit(SseDeserializer deserializer);

  @protected
  BlockTime sse_decode_block_time(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  AddressIndex sse_decode_box_autoadd_address_index(
      SseDeserializer deserializer);

  @protected
  ApiUserSettings sse_decode_box_autoadd_api_user_settings(
      SseDeserializer deserializer);

  @protected
  BitcoinAddress sse_decode_box_autoadd_bitcoin_address(
      SseDeserializer deserializer);

  @protected
  BlockTime sse_decode_box_autoadd_block_time(SseDeserializer deserializer);

  @protected
  CreateWalletAccountReq sse_decode_box_autoadd_create_wallet_account_req(
      SseDeserializer deserializer);

  @protected
  CreateWalletReq sse_decode_box_autoadd_create_wallet_req(
      SseDeserializer deserializer);

  @protected
  DatabaseConfig sse_decode_box_autoadd_database_config(
      SseDeserializer deserializer);

  @protected
  EsploraConfig sse_decode_box_autoadd_esplora_config(
      SseDeserializer deserializer);

  @protected
  double sse_decode_box_autoadd_f_32(SseDeserializer deserializer);

  @protected
  LocalUtxo sse_decode_box_autoadd_local_utxo(SseDeserializer deserializer);

  @protected
  MyTestObject sse_decode_box_autoadd_my_test_object(
      SseDeserializer deserializer);

  @protected
  OutPoint sse_decode_box_autoadd_out_point(SseDeserializer deserializer);

  @protected
  ProtonContactEmails sse_decode_box_autoadd_proton_contact_emails(
      SseDeserializer deserializer);

  @protected
  ProtonExchangeRate sse_decode_box_autoadd_proton_exchange_rate(
      SseDeserializer deserializer);

  @protected
  ProtonWallet sse_decode_box_autoadd_proton_wallet(
      SseDeserializer deserializer);

  @protected
  ProtonWalletKey sse_decode_box_autoadd_proton_wallet_key(
      SseDeserializer deserializer);

  @protected
  PsbtSigHashType sse_decode_box_autoadd_psbt_sig_hash_type(
      SseDeserializer deserializer);

  @protected
  RbfValue sse_decode_box_autoadd_rbf_value(SseDeserializer deserializer);

  @protected
  (OutPoint, String, int) sse_decode_box_autoadd_record_out_point_string_usize(
      SseDeserializer deserializer);

  @protected
  Script sse_decode_box_autoadd_script(SseDeserializer deserializer);

  @protected
  SignOptions sse_decode_box_autoadd_sign_options(SseDeserializer deserializer);

  @protected
  SqliteDbConfiguration sse_decode_box_autoadd_sqlite_db_configuration(
      SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_8(SseDeserializer deserializer);

  @protected
  WalletAccount sse_decode_box_autoadd_wallet_account(
      SseDeserializer deserializer);

  @protected
  WalletSettings sse_decode_box_autoadd_wallet_settings(
      SseDeserializer deserializer);

  @protected
  WalletTransaction sse_decode_box_autoadd_wallet_transaction(
      SseDeserializer deserializer);

  @protected
  ChangeSpendPolicy sse_decode_change_spend_policy(
      SseDeserializer deserializer);

  @protected
  ContactEmailEvent sse_decode_contact_email_event(
      SseDeserializer deserializer);

  @protected
  CreateWalletAccountReq sse_decode_create_wallet_account_req(
      SseDeserializer deserializer);

  @protected
  CreateWalletReq sse_decode_create_wallet_req(SseDeserializer deserializer);

  @protected
  DatabaseConfig sse_decode_database_config(SseDeserializer deserializer);

  @protected
  EmailAddress sse_decode_email_address(SseDeserializer deserializer);

  @protected
  EmailIntegrationBitcoinAddress sse_decode_email_integration_bitcoin_address(
      SseDeserializer deserializer);

  @protected
  Error sse_decode_error(SseDeserializer deserializer);

  @protected
  EsploraConfig sse_decode_esplora_config(SseDeserializer deserializer);

  @protected
  double sse_decode_f_32(SseDeserializer deserializer);

  @protected
  FiatCurrency sse_decode_fiat_currency(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  int sse_decode_i_64(SseDeserializer deserializer);

  @protected
  KeychainKind sse_decode_keychain_kind(SseDeserializer deserializer);

  @protected
  Level sse_decode_level(SseDeserializer deserializer);

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  List<BitcoinAddress> sse_decode_list_bitcoin_address(
      SseDeserializer deserializer);

  @protected
  List<ContactEmailEvent> sse_decode_list_contact_email_event(
      SseDeserializer deserializer);

  @protected
  List<EmailAddress> sse_decode_list_email_address(
      SseDeserializer deserializer);

  @protected
  List<Uint8List> sse_decode_list_list_prim_u_8_strict(
      SseDeserializer deserializer);

  @protected
  List<LocalUtxo> sse_decode_list_local_utxo(SseDeserializer deserializer);

  @protected
  List<OutPoint> sse_decode_list_out_point(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_u_8_loose(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<ProtonAddress> sse_decode_list_proton_address(
      SseDeserializer deserializer);

  @protected
  List<ProtonAddressKey> sse_decode_list_proton_address_key(
      SseDeserializer deserializer);

  @protected
  List<ProtonContactEmails> sse_decode_list_proton_contact_emails(
      SseDeserializer deserializer);

  @protected
  List<ProtonEvent> sse_decode_list_proton_event(SseDeserializer deserializer);

  @protected
  List<ScriptAmount> sse_decode_list_script_amount(
      SseDeserializer deserializer);

  @protected
  List<TransactionDetails> sse_decode_list_transaction_details(
      SseDeserializer deserializer);

  @protected
  List<TxIn> sse_decode_list_tx_in(SseDeserializer deserializer);

  @protected
  List<TxOut> sse_decode_list_tx_out(SseDeserializer deserializer);

  @protected
  List<WalletAccount> sse_decode_list_wallet_account(
      SseDeserializer deserializer);

  @protected
  List<WalletAccountEvent> sse_decode_list_wallet_account_event(
      SseDeserializer deserializer);

  @protected
  List<WalletBitcoinAddress> sse_decode_list_wallet_bitcoin_address(
      SseDeserializer deserializer);

  @protected
  List<WalletData> sse_decode_list_wallet_data(SseDeserializer deserializer);

  @protected
  List<WalletEvent> sse_decode_list_wallet_event(SseDeserializer deserializer);

  @protected
  List<WalletKeyEvent> sse_decode_list_wallet_key_event(
      SseDeserializer deserializer);

  @protected
  List<WalletSettingsEvent> sse_decode_list_wallet_settings_event(
      SseDeserializer deserializer);

  @protected
  List<WalletTransaction> sse_decode_list_wallet_transaction(
      SseDeserializer deserializer);

  @protected
  List<WalletTransactionEvent> sse_decode_list_wallet_transaction_event(
      SseDeserializer deserializer);

  @protected
  LocalUtxo sse_decode_local_utxo(SseDeserializer deserializer);

  @protected
  LogEntry sse_decode_log_entry(SseDeserializer deserializer);

  @protected
  MyTestObject sse_decode_my_test_object(SseDeserializer deserializer);

  @protected
  Network sse_decode_network(SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  ApiUserSettings? sse_decode_opt_box_autoadd_api_user_settings(
      SseDeserializer deserializer);

  @protected
  BlockTime? sse_decode_opt_box_autoadd_block_time(
      SseDeserializer deserializer);

  @protected
  double? sse_decode_opt_box_autoadd_f_32(SseDeserializer deserializer);

  @protected
  ProtonContactEmails? sse_decode_opt_box_autoadd_proton_contact_emails(
      SseDeserializer deserializer);

  @protected
  ProtonExchangeRate? sse_decode_opt_box_autoadd_proton_exchange_rate(
      SseDeserializer deserializer);

  @protected
  ProtonWallet? sse_decode_opt_box_autoadd_proton_wallet(
      SseDeserializer deserializer);

  @protected
  ProtonWalletKey? sse_decode_opt_box_autoadd_proton_wallet_key(
      SseDeserializer deserializer);

  @protected
  PsbtSigHashType? sse_decode_opt_box_autoadd_psbt_sig_hash_type(
      SseDeserializer deserializer);

  @protected
  RbfValue? sse_decode_opt_box_autoadd_rbf_value(SseDeserializer deserializer);

  @protected
  (OutPoint, String, int)?
      sse_decode_opt_box_autoadd_record_out_point_string_usize(
          SseDeserializer deserializer);

  @protected
  Script? sse_decode_opt_box_autoadd_script(SseDeserializer deserializer);

  @protected
  SignOptions? sse_decode_opt_box_autoadd_sign_options(
      SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_64(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_8(SseDeserializer deserializer);

  @protected
  WalletAccount? sse_decode_opt_box_autoadd_wallet_account(
      SseDeserializer deserializer);

  @protected
  WalletSettings? sse_decode_opt_box_autoadd_wallet_settings(
      SseDeserializer deserializer);

  @protected
  WalletTransaction? sse_decode_opt_box_autoadd_wallet_transaction(
      SseDeserializer deserializer);

  @protected
  List<String>? sse_decode_opt_list_String(SseDeserializer deserializer);

  @protected
  List<ContactEmailEvent>? sse_decode_opt_list_contact_email_event(
      SseDeserializer deserializer);

  @protected
  List<ProtonAddressKey>? sse_decode_opt_list_proton_address_key(
      SseDeserializer deserializer);

  @protected
  List<WalletAccountEvent>? sse_decode_opt_list_wallet_account_event(
      SseDeserializer deserializer);

  @protected
  List<WalletEvent>? sse_decode_opt_list_wallet_event(
      SseDeserializer deserializer);

  @protected
  List<WalletKeyEvent>? sse_decode_opt_list_wallet_key_event(
      SseDeserializer deserializer);

  @protected
  List<WalletSettingsEvent>? sse_decode_opt_list_wallet_settings_event(
      SseDeserializer deserializer);

  @protected
  List<WalletTransactionEvent>? sse_decode_opt_list_wallet_transaction_event(
      SseDeserializer deserializer);

  @protected
  OutPoint sse_decode_out_point(SseDeserializer deserializer);

  @protected
  ProtonAddress sse_decode_proton_address(SseDeserializer deserializer);

  @protected
  ProtonAddressKey sse_decode_proton_address_key(SseDeserializer deserializer);

  @protected
  ProtonContactEmails sse_decode_proton_contact_emails(
      SseDeserializer deserializer);

  @protected
  ProtonEvent sse_decode_proton_event(SseDeserializer deserializer);

  @protected
  ProtonExchangeRate sse_decode_proton_exchange_rate(
      SseDeserializer deserializer);

  @protected
  ProtonWallet sse_decode_proton_wallet(SseDeserializer deserializer);

  @protected
  ProtonWalletKey sse_decode_proton_wallet_key(SseDeserializer deserializer);

  @protected
  PsbtSigHashType sse_decode_psbt_sig_hash_type(SseDeserializer deserializer);

  @protected
  RbfValue sse_decode_rbf_value(SseDeserializer deserializer);

  @protected
  (OutPoint, String, int) sse_decode_record_out_point_string_usize(
      SseDeserializer deserializer);

  @protected
  (String, Network) sse_decode_record_string_network(
      SseDeserializer deserializer);

  @protected
  (String, TransactionDetails) sse_decode_record_string_transaction_details(
      SseDeserializer deserializer);

  @protected
  Script sse_decode_script(SseDeserializer deserializer);

  @protected
  ScriptAmount sse_decode_script_amount(SseDeserializer deserializer);

  @protected
  SignOptions sse_decode_sign_options(SseDeserializer deserializer);

  @protected
  SqliteDbConfiguration sse_decode_sqlite_db_configuration(
      SseDeserializer deserializer);

  @protected
  TransactionDetails sse_decode_transaction_details(
      SseDeserializer deserializer);

  @protected
  TxIn sse_decode_tx_in(SseDeserializer deserializer);

  @protected
  TxOut sse_decode_tx_out(SseDeserializer deserializer);

  @protected
  int sse_decode_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_u_32(SseDeserializer deserializer);

  @protected
  int sse_decode_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  int sse_decode_usize(SseDeserializer deserializer);

  @protected
  WalletAccount sse_decode_wallet_account(SseDeserializer deserializer);

  @protected
  WalletAccountEvent sse_decode_wallet_account_event(
      SseDeserializer deserializer);

  @protected
  WalletBitcoinAddress sse_decode_wallet_bitcoin_address(
      SseDeserializer deserializer);

  @protected
  WalletData sse_decode_wallet_data(SseDeserializer deserializer);

  @protected
  WalletEvent sse_decode_wallet_event(SseDeserializer deserializer);

  @protected
  WalletKeyEvent sse_decode_wallet_key_event(SseDeserializer deserializer);

  @protected
  WalletSettings sse_decode_wallet_settings(SseDeserializer deserializer);

  @protected
  WalletSettingsEvent sse_decode_wallet_settings_event(
      SseDeserializer deserializer);

  @protected
  WalletTransaction sse_decode_wallet_transaction(SseDeserializer deserializer);

  @protected
  WalletTransactionEvent sse_decode_wallet_transaction_event(
      SseDeserializer deserializer);

  @protected
  WordCount sse_decode_word_count(SseDeserializer deserializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManager(
          BdkWalletManager self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIService(
          ProtonApiService self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManager(
          BdkWalletManager self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIService(
          ProtonApiService self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManager(
          BdkWalletManager self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIService(
          ProtonApiService self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_address_index(AddressIndex self, SseSerializer serializer);

  @protected
  void sse_encode_address_info(AddressInfo self, SseSerializer serializer);

  @protected
  void sse_encode_api_error(ApiError self, SseSerializer serializer);

  @protected
  void sse_encode_api_user_settings(
      ApiUserSettings self, SseSerializer serializer);

  @protected
  void sse_encode_balance(Balance self, SseSerializer serializer);

  @protected
  void sse_encode_bitcoin_address(
      BitcoinAddress self, SseSerializer serializer);

  @protected
  void sse_encode_bitcoin_unit(BitcoinUnit self, SseSerializer serializer);

  @protected
  void sse_encode_block_time(BlockTime self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_address_index(
      AddressIndex self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_api_user_settings(
      ApiUserSettings self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_bitcoin_address(
      BitcoinAddress self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_block_time(
      BlockTime self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_create_wallet_account_req(
      CreateWalletAccountReq self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_create_wallet_req(
      CreateWalletReq self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_database_config(
      DatabaseConfig self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_esplora_config(
      EsploraConfig self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_f_32(double self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_local_utxo(
      LocalUtxo self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_my_test_object(
      MyTestObject self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_out_point(
      OutPoint self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_proton_contact_emails(
      ProtonContactEmails self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_proton_exchange_rate(
      ProtonExchangeRate self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_proton_wallet(
      ProtonWallet self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_proton_wallet_key(
      ProtonWalletKey self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_psbt_sig_hash_type(
      PsbtSigHashType self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_rbf_value(
      RbfValue self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_record_out_point_string_usize(
      (OutPoint, String, int) self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_script(Script self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sign_options(
      SignOptions self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sqlite_db_configuration(
      SqliteDbConfiguration self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_wallet_account(
      WalletAccount self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_wallet_settings(
      WalletSettings self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_wallet_transaction(
      WalletTransaction self, SseSerializer serializer);

  @protected
  void sse_encode_change_spend_policy(
      ChangeSpendPolicy self, SseSerializer serializer);

  @protected
  void sse_encode_contact_email_event(
      ContactEmailEvent self, SseSerializer serializer);

  @protected
  void sse_encode_create_wallet_account_req(
      CreateWalletAccountReq self, SseSerializer serializer);

  @protected
  void sse_encode_create_wallet_req(
      CreateWalletReq self, SseSerializer serializer);

  @protected
  void sse_encode_database_config(
      DatabaseConfig self, SseSerializer serializer);

  @protected
  void sse_encode_email_address(EmailAddress self, SseSerializer serializer);

  @protected
  void sse_encode_email_integration_bitcoin_address(
      EmailIntegrationBitcoinAddress self, SseSerializer serializer);

  @protected
  void sse_encode_error(Error self, SseSerializer serializer);

  @protected
  void sse_encode_esplora_config(EsploraConfig self, SseSerializer serializer);

  @protected
  void sse_encode_f_32(double self, SseSerializer serializer);

  @protected
  void sse_encode_fiat_currency(FiatCurrency self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_keychain_kind(KeychainKind self, SseSerializer serializer);

  @protected
  void sse_encode_level(Level self, SseSerializer serializer);

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_bitcoin_address(
      List<BitcoinAddress> self, SseSerializer serializer);

  @protected
  void sse_encode_list_contact_email_event(
      List<ContactEmailEvent> self, SseSerializer serializer);

  @protected
  void sse_encode_list_email_address(
      List<EmailAddress> self, SseSerializer serializer);

  @protected
  void sse_encode_list_list_prim_u_8_strict(
      List<Uint8List> self, SseSerializer serializer);

  @protected
  void sse_encode_list_local_utxo(
      List<LocalUtxo> self, SseSerializer serializer);

  @protected
  void sse_encode_list_out_point(List<OutPoint> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_loose(List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_proton_address(
      List<ProtonAddress> self, SseSerializer serializer);

  @protected
  void sse_encode_list_proton_address_key(
      List<ProtonAddressKey> self, SseSerializer serializer);

  @protected
  void sse_encode_list_proton_contact_emails(
      List<ProtonContactEmails> self, SseSerializer serializer);

  @protected
  void sse_encode_list_proton_event(
      List<ProtonEvent> self, SseSerializer serializer);

  @protected
  void sse_encode_list_script_amount(
      List<ScriptAmount> self, SseSerializer serializer);

  @protected
  void sse_encode_list_transaction_details(
      List<TransactionDetails> self, SseSerializer serializer);

  @protected
  void sse_encode_list_tx_in(List<TxIn> self, SseSerializer serializer);

  @protected
  void sse_encode_list_tx_out(List<TxOut> self, SseSerializer serializer);

  @protected
  void sse_encode_list_wallet_account(
      List<WalletAccount> self, SseSerializer serializer);

  @protected
  void sse_encode_list_wallet_account_event(
      List<WalletAccountEvent> self, SseSerializer serializer);

  @protected
  void sse_encode_list_wallet_bitcoin_address(
      List<WalletBitcoinAddress> self, SseSerializer serializer);

  @protected
  void sse_encode_list_wallet_data(
      List<WalletData> self, SseSerializer serializer);

  @protected
  void sse_encode_list_wallet_event(
      List<WalletEvent> self, SseSerializer serializer);

  @protected
  void sse_encode_list_wallet_key_event(
      List<WalletKeyEvent> self, SseSerializer serializer);

  @protected
  void sse_encode_list_wallet_settings_event(
      List<WalletSettingsEvent> self, SseSerializer serializer);

  @protected
  void sse_encode_list_wallet_transaction(
      List<WalletTransaction> self, SseSerializer serializer);

  @protected
  void sse_encode_list_wallet_transaction_event(
      List<WalletTransactionEvent> self, SseSerializer serializer);

  @protected
  void sse_encode_local_utxo(LocalUtxo self, SseSerializer serializer);

  @protected
  void sse_encode_log_entry(LogEntry self, SseSerializer serializer);

  @protected
  void sse_encode_my_test_object(MyTestObject self, SseSerializer serializer);

  @protected
  void sse_encode_network(Network self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_api_user_settings(
      ApiUserSettings? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_block_time(
      BlockTime? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_f_32(double? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_proton_contact_emails(
      ProtonContactEmails? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_proton_exchange_rate(
      ProtonExchangeRate? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_proton_wallet(
      ProtonWallet? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_proton_wallet_key(
      ProtonWalletKey? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_psbt_sig_hash_type(
      PsbtSigHashType? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_rbf_value(
      RbfValue? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_record_out_point_string_usize(
      (OutPoint, String, int)? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_script(
      Script? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_sign_options(
      SignOptions? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_64(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_8(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_wallet_account(
      WalletAccount? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_wallet_settings(
      WalletSettings? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_wallet_transaction(
      WalletTransaction? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_String(List<String>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_contact_email_event(
      List<ContactEmailEvent>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_proton_address_key(
      List<ProtonAddressKey>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_wallet_account_event(
      List<WalletAccountEvent>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_wallet_event(
      List<WalletEvent>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_wallet_key_event(
      List<WalletKeyEvent>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_wallet_settings_event(
      List<WalletSettingsEvent>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_wallet_transaction_event(
      List<WalletTransactionEvent>? self, SseSerializer serializer);

  @protected
  void sse_encode_out_point(OutPoint self, SseSerializer serializer);

  @protected
  void sse_encode_proton_address(ProtonAddress self, SseSerializer serializer);

  @protected
  void sse_encode_proton_address_key(
      ProtonAddressKey self, SseSerializer serializer);

  @protected
  void sse_encode_proton_contact_emails(
      ProtonContactEmails self, SseSerializer serializer);

  @protected
  void sse_encode_proton_event(ProtonEvent self, SseSerializer serializer);

  @protected
  void sse_encode_proton_exchange_rate(
      ProtonExchangeRate self, SseSerializer serializer);

  @protected
  void sse_encode_proton_wallet(ProtonWallet self, SseSerializer serializer);

  @protected
  void sse_encode_proton_wallet_key(
      ProtonWalletKey self, SseSerializer serializer);

  @protected
  void sse_encode_psbt_sig_hash_type(
      PsbtSigHashType self, SseSerializer serializer);

  @protected
  void sse_encode_rbf_value(RbfValue self, SseSerializer serializer);

  @protected
  void sse_encode_record_out_point_string_usize(
      (OutPoint, String, int) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_network(
      (String, Network) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_transaction_details(
      (String, TransactionDetails) self, SseSerializer serializer);

  @protected
  void sse_encode_script(Script self, SseSerializer serializer);

  @protected
  void sse_encode_script_amount(ScriptAmount self, SseSerializer serializer);

  @protected
  void sse_encode_sign_options(SignOptions self, SseSerializer serializer);

  @protected
  void sse_encode_sqlite_db_configuration(
      SqliteDbConfiguration self, SseSerializer serializer);

  @protected
  void sse_encode_transaction_details(
      TransactionDetails self, SseSerializer serializer);

  @protected
  void sse_encode_tx_in(TxIn self, SseSerializer serializer);

  @protected
  void sse_encode_tx_out(TxOut self, SseSerializer serializer);

  @protected
  void sse_encode_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_usize(int self, SseSerializer serializer);

  @protected
  void sse_encode_wallet_account(WalletAccount self, SseSerializer serializer);

  @protected
  void sse_encode_wallet_account_event(
      WalletAccountEvent self, SseSerializer serializer);

  @protected
  void sse_encode_wallet_bitcoin_address(
      WalletBitcoinAddress self, SseSerializer serializer);

  @protected
  void sse_encode_wallet_data(WalletData self, SseSerializer serializer);

  @protected
  void sse_encode_wallet_event(WalletEvent self, SseSerializer serializer);

  @protected
  void sse_encode_wallet_key_event(
      WalletKeyEvent self, SseSerializer serializer);

  @protected
  void sse_encode_wallet_settings(
      WalletSettings self, SseSerializer serializer);

  @protected
  void sse_encode_wallet_settings_event(
      WalletSettingsEvent self, SseSerializer serializer);

  @protected
  void sse_encode_wallet_transaction(
      WalletTransaction self, SseSerializer serializer);

  @protected
  void sse_encode_wallet_transaction_event(
      WalletTransactionEvent self, SseSerializer serializer);

  @protected
  void sse_encode_word_count(WordCount self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>
      RustLibWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RustLibWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManager(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManager(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManagerPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_wallet_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManager');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManager =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManagerPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManager(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManager(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManagerPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_wallet_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManager');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManager =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockBdkWalletManagerPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIService(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIService(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIServicePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_wallet_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIService');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIService =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIServicePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIService(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIService(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIServicePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_wallet_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIService');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIService =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockProtonAPIServicePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();
}
